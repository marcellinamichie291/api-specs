{
	"info": {
		"_postman_id": "3e2d6209-f3a5-4eec-83dc-a6b2a0da3c69",
		"name": "RudderStack",
		"description": "Detailed documentation of all the supported RudderStack APIs.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21447502"
	},
	"item": [
		{
			"name": "HTTP API",
			"item": [
				{
					"name": "Identify",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"user1\",\n  \"anonymousId\":\"anon-id-new\",\n  \"context\": {\n    \"traits\": {\n       \"trait1\": \"new-val\"  \n    },\n    \"ip\": \"14.5.67.21\",\n    \"library\": {\n        \"name\": \"http\"\n    }\n  },\n  \"timestamp\": \"2020-02-02T00:23:09.544Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{data_plane_url}}/v1/identify",
							"host": [
								"{{data_plane_url}}"
							],
							"path": [
								"v1",
								"identify"
							]
						},
						"description": "The `identify` call lets you capture the relevant details about a visitor user and also record any traits associated with them.\n\n> As a best practice, make sure the `identify` call is made at the start of every session or page load for logged-in users. This will ensure all the latest user traits are captured.\n----\n\n#### Accepted Fields\n\n|**Field**|**Type**|**Presence**|**Description**|\n|-----|-----|-----|-----|\n|`anonymousId`|String|Optional|Sets the user ID in cases where there is no unique identifier for the user in the database.|\n|`userId`|String|Optional, if `anonymousId` is set.|Unique identifier for a particular user in your database.|\n|`context`|Object|Optional|Dictionary of information that provides additional context about the message. It is not directly related to the API call.|\n|`integrations`|Object|Optional|Contains the list of destinations to be enabled or disabled.|\n|`timestamp`|Date|Optional|The timestamp associated with the user's arrival.|\n|`traits`|Object|Optional|Dictionary of the user traits such as `name` or `email`.|"
					},
					"response": [
						{
							"name": "Identify",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"user12345\",\n  \"anonymousId\":\"anon-id-new\",\n  \"context\": {\n    \"traits\": {\n       \"trait1\": \"new-val\"  \n    },\n    \"ip\": \"14.5.67.21\",\n    \"library\": {\n        \"name\": \"http\"\n    }\n  },\n  \"timestamp\": \"2020-02-02T00:23:09.544Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{data_plane_url}}/v1/identify",
									"host": [
										"{{data_plane_url}}"
									],
									"path": [
										"v1",
										"identify"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 21 Jul 2021 05:09:41 GMT"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "openresty/1.19.3.1"
								},
								{
									"key": "Vary",
									"value": "Origin"
								}
							],
							"cookie": [],
							"body": "OK"
						}
					]
				},
				{
					"name": "Track",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"user123\",\n  \"event\": \"Product Purchased\",\n  \"properties\": {\n    \"name\": \"Rubik's Cube\",\n    \"revenue\": 4.99\n  },\n  \"context\": {\n    \"ip\": \"14.5.67.21\"\n  },\n  \"timestamp\": \"2020-02-02T00:23:09.544Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{data_plane_url}}/v1/track",
							"host": [
								"{{data_plane_url}}"
							],
							"path": [
								"v1",
								"track"
							]
						},
						"description": "The `track` call lets you record all the user actions along with their associated properties. \n\n> Each user action is considered to be an event.\n----\n\n#### Accepted Fields\n\n|**Field**|**Type**|**Presence**|**Description**|\n|-----|-----|-----|-----|\n|`anonymousId`|String|Optional|Sets the user ID in cases where there is no unique identifier for the user in the database.|\n|`userId`|String|Optional, if `anonymousId` is set.|Unique identifier for a particular user in your database.|\n|`context`|Object|Optional|Dictionary of information that provides additional context about the message. It is not directly related to the API call.|\n|`event`|String|Required|Name of the user event.|\n|`properties`|Object|Optional|Dictionary of the properties associated with the particular event.|\n|`integrations`|Object|Optional|Contains the list of destinations to be enabled or disabled.|\n|`timestamp`|Date|Optional|The timestamp associated with the user's arrival.|"
					},
					"response": [
						{
							"name": "Track",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"user123\",\n  \"event\": \"Product Purchased\",\n  \"properties\": {\n    \"name\": \"Rubik's Cube\",\n    \"revenue\": 4.99\n  },\n  \"context\": {\n    \"ip\": \"14.5.67.21\"\n  },\n  \"timestamp\": \"2020-02-02T00:23:09.544Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{data_plane_url}}/v1/track",
									"host": [
										"{{data_plane_url}}"
									],
									"path": [
										"v1",
										"track"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 21 Jul 2021 05:10:39 GMT"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "openresty/1.19.3.1"
								},
								{
									"key": "Vary",
									"value": "Origin"
								}
							],
							"cookie": [],
							"body": "OK"
						}
					]
				},
				{
					"name": "Page",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"user12345\",\n  \"anonymousId\":\"anon-id-new\",\n  \"name\": \"Page View\",\n  \"properties\": {\n    \"title\": \"Home\",\n    \"path\": \"/\"\n  },\n  \"context\": {\n    \"ip\": \"14.5.67.21\",\n    \"library\": {\n        \"name\": \"http\"\n    }\n  },\n  \"timestamp\": \"2020-02-02T00:23:09.544Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{data_plane_url}}/v1/page",
							"host": [
								"{{data_plane_url}}"
							],
							"path": [
								"v1",
								"page"
							]
						},
						"description": "The `page` call lets you record your website's page views along with any additional relevant information about the viewed page.\n\n#### Accepted Fields\n\n|**Field**|**Type**|**Presence**|**Description**|\n|-----|-----|-----|-----|\n|`anonymousId`|String|Optional|Sets the user ID in cases where there is no unique identifier for the user in the database.|\n|`userId`|String|Optional, if `anonymousId` is set.|Unique identifier for a particular user in your database.|\n|`context`|Object|Optional|Dictionary of information that provides additional context about the message. It is not directly related to the API call.|\n|`integrations`|Object|Optional|Contains the list of destinations to be enabled or disabled.|\n|`name`|String|Required|Name of the viewed page.|\n|`properties`|Object|Optional|Dictionary of the user traits such as `url`, `referrer`, etc.|\n|`timestamp`|Date|Optional|The timestamp associated with the user's arrival.|"
					},
					"response": [
						{
							"name": "Page",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"user12345\",\n  \"anonymousId\":\"anon-id-new\",\n  \"name\": \"Page View\",\n  \"properties\": {\n    \"title\": \"Home\",\n    \"path\": \"/\"\n  },\n  \"context\": {\n    \"ip\": \"14.5.67.21\",\n    \"library\": {\n        \"name\": \"http\"\n    }\n  },\n  \"timestamp\": \"2020-02-02T00:23:09.544Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{data_plane_url}}/v1/page",
									"host": [
										"{{data_plane_url}}"
									],
									"path": [
										"v1",
										"page"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 21 Jul 2021 05:11:34 GMT"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "openresty/1.19.3.1"
								},
								{
									"key": "Vary",
									"value": "Origin"
								}
							],
							"cookie": [],
							"body": "OK"
						}
					]
				},
				{
					"name": "Screen",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"user12345\",\n  \"anonymousId\":\"anon-id-new\",\n  \"name\": \"Screen View\",\n  \"properties\": {\n    \"prop1\": \"5\"\n  },\n  \"context\": {\n    \"ip\": \"14.5.67.21\",\n    \"library\": {\n        \"name\": \"http\"\n    }\n  },\n  \"timestamp\": \"2020-02-02T00:23:09.544Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{data_plane_url}}/v1/screen",
							"host": [
								"{{data_plane_url}}"
							],
							"path": [
								"v1",
								"screen"
							]
						},
						"description": "The `screen` call lets you record whenever a mobile app user sees the screen of their mobile device. This call is the `page` equivalent for a mobile app/device.\n\n#### Accepted Fields\n\n|**Field**|**Type**|**Presence**|**Description**|\n|-----|-----|-----|-----|\n|`anonymousId`|String|Optional|Sets the user ID in cases where there is no unique identifier for the user in the database.|\n|`userId`|String|Optional, if `anonymousId` is set.|Unique identifier for a particular user in your database.|\n|`context`|Object|Optional|Dictionary of information that provides additional context about the message. It is not directly related to the API call.|\n|`integrations`|Object|Optional|Contains the list of destinations to be enabled or disabled.|\n|`name`|String|Required|Name of the screen being viewed by the user.|\n|`timestamp`|Date|Optional|The timestamp associated with the user's arrival.|\n|`properties`|Object|Optional|Dictionary of the properties associated with the screen, such as `url`,`referrer`, etc.|"
					},
					"response": [
						{
							"name": "Screen",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"user12345\",\n  \"anonymousId\":\"anon-id-new\",\n  \"name\": \"Screen View\",\n  \"properties\": {\n    \"prop1\": \"5\"\n  },\n  \"context\": {\n    \"ip\": \"14.5.67.21\",\n    \"library\": {\n        \"name\": \"http\"\n    }\n  },\n  \"timestamp\": \"2020-02-02T00:23:09.544Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{data_plane_url}}/v1/screen",
									"host": [
										"{{data_plane_url}}"
									],
									"path": [
										"v1",
										"screen"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 21 Jul 2021 05:12:21 GMT"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "openresty/1.19.3.1"
								},
								{
									"key": "Vary",
									"value": "Origin"
								}
							],
							"cookie": [],
							"body": "OK"
						}
					]
				},
				{
					"name": "Group",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"user12345\",\n  \"groupId\": \"group1\",\n  \"traits\": {\n    \"name\": \"Company\",\n    \"industry\": \"Industry\",\n    \"employees\": 123\n  },\n  \"context\": {\n    \"traits\": {\n       \"trait1\": \"new-val\"  \n    },\n    \"ip\": \"14.5.67.21\",\n    \"library\": {\n        \"name\": \"http\"\n    }\n  },\n  \"timestamp\": \"2020-01-21T00:21:34.208Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{data_plane_url}}/v1/group",
							"host": [
								"{{data_plane_url}}"
							],
							"path": [
								"v1",
								"group"
							]
						},
						"description": "The `group` call lets you associate an identified user with a group such as a company, organization, or an account.\n\nIt also allows you to record any traits associated with that group such as the name of the company, industry, or the number of employees in the organization.\n\n#### Accepted Fields\n\n|**Field**|**Type**|**Presence**|**Description**|\n|-----|-----|-----|-----|\n|`anonymousId`|String|Optional|Sets the user ID in cases where there is no unique identifier for the user in the database.|\n|`userId`|String|Optional, if `anonymousId` is set.|Unique identifier for a particular user in your database.|\n|`groupId`|String|Required|Unique identifier for the particular group in your database.|\n|`context`|Object|Optional|Dictionary of information that provides additional context about the message. It is not directly related to the API call.|\n|`traits`|Object|Optional|Dictionary of the user traits such as `name` or `email`.|\n|`integrations`|Object|Optional|Contains the list of destinations to be enabled or disabled.|\n|`timestamp`|Date|Optional|The timestamp associated with the user's arrival.|"
					},
					"response": [
						{
							"name": "Group",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"user12345\",\n  \"groupId\": \"group1\",\n  \"traits\": {\n    \"name\": \"Company\",\n    \"industry\": \"Industry\",\n    \"employees\": 123\n  },\n  \"context\": {\n    \"traits\": {\n       \"trait1\": \"new-val\"  \n    },\n    \"ip\": \"14.5.67.21\",\n    \"library\": {\n        \"name\": \"http\"\n    }\n  },\n  \"timestamp\": \"2020-01-21T00:21:34.208Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{data_plane_url}}/v1/group",
									"host": [
										"{{data_plane_url}}"
									],
									"path": [
										"v1",
										"group"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 21 Jul 2021 05:13:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "openresty/1.19.3.1"
								},
								{
									"key": "Vary",
									"value": "Origin"
								}
							],
							"cookie": [],
							"body": "OK"
						}
					]
				},
				{
					"name": "Alias",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"user123\",\n  \"previousId\": \"user12345\",\n  \"context\": {\n    \"traits\": {\n       \"trait1\": \"new-val\"  \n    },\n    \"ip\": \"14.5.67.21\",\n    \"library\": {\n        \"name\": \"http\"\n    }\n  },\n  \"timestamp\": \"2020-01-21T00:21:34.208Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{data_plane_url}}/v1/alias",
							"host": [
								"{{data_plane_url}}"
							],
							"path": [
								"v1",
								"alias"
							]
						},
						"description": "The `alias` call captures any relevant details about the user's alternate/past identity. With `alias`, you can merge or associate a user's past identity with the current one. \n\nThe `alias` call is quite useful in cases where you need to associate an `anonymousId` with an identified user on signup (in case of Mixpanel) or associating user identities when the user switches their IDs (in case of Kissmetrics).\n\n#### Accepted Fields\n\n|**Field**|**Type**|**Presence**|**Description**|\n|-----|-----|-----|-----|\n|`userId`|String|Optional|Sets the user ID in cases where there is no unique identifier for the user in the database.|\n|`previousId`|String|Required|The previous unique identifier of the user.|\n|`context`|Object|Optional|Dictionary of information that provides additional context about the message. It is not directly related to the API call.|\n|`integrations`|Object|Optional|Contains the list of destinations to be enabled or disabled.|\n|`timestamp`|Date|Optional|The timestamp associated with the message's arrival.|\n|`traits`|Object|Optional|Dictionary of the user traits such as `name` or `email`.|"
					},
					"response": [
						{
							"name": "Alias",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"user123\",\n  \"previousId\": \"user12345\",\n  \"context\": {\n    \"traits\": {\n       \"trait1\": \"new-val\"  \n    },\n    \"ip\": \"14.5.67.21\",\n    \"library\": {\n        \"name\": \"http\"\n    }\n  },\n  \"timestamp\": \"2020-01-21T00:21:34.208Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{data_plane_url}}/v1/alias",
									"host": [
										"{{data_plane_url}}"
									],
									"path": [
										"v1",
										"alias"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 21 Jul 2021 05:14:27 GMT"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "openresty/1.19.3.1"
								},
								{
									"key": "Vary",
									"value": "Origin"
								}
							],
							"cookie": [],
							"body": "OK"
						}
					]
				},
				{
					"name": "Batch",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"batch\": [{\n            \"userId\": \"identified user id\",\n            \"anonymousId\": \"anon-id-new\",\n            \"type\": \"identify\",\n            \"context\": {\n                \"traits\": {\n                    \"trait1\": \"new-val\"\n                },\n                \"ip\": \"14.5.67.21\",\n                \"library\": {\n                    \"name\": \"http\"\n                }\n            },\n            \"timestamp\": \"2020-02-02T00:23:09.544Z\"\n        },\n        {\n            \"userId\": \"identified user id\",\n            \"anonymousId\": \"anon-id-new\",\n            \"event\": \"Product Purchased new\",\n            \"type\": \"track\",\n            \"properties\": {\n                \"name\": \"Shirt\",\n                \"revenue\": 4.99\n            },\n            \"context\": {\n                \"ip\": \"14.5.67.21\",\n                \"library\": {\n                    \"name\": \"http\"\n                }\n            },\n            \"timestamp\": \"2020-02-02T00:23:09.544Z\"\n        },\n        {\n            \"userId\": \"identified user id\",\n            \"anonymousId\": \"anon-id-new\",\n            \"name\": \"Page View\",\n            \"type\": \"page\",\n            \"properties\": {\n                \"title\": \"Home\",\n                \"path\": \"/\"\n            },\n            \"context\": {\n                \"ip\": \"14.5.67.21\",\n                \"library\": {\n                    \"name\": \"http\"\n                }\n            },\n            \"timestamp\": \"2020-02-02T00:23:09.544Z\"\n        },\n        {\n            \"userId\": \"identified user id\",\n            \"anonymousId\": \"anon-id-new\",\n            \"name\": \"Screen View\",\n            \"type\": \"screen\",\n            \"properties\": {\n                \"prop1\": \"5\"\n            },\n            \"context\": {\n                \"ip\": \"14.5.67.21\",\n                \"library\": {\n                    \"name\": \"http\"\n                }\n            },\n            \"timestamp\": \"2020-02-02T00:23:09.544Z\"\n        },\n        {\n            \"userId\": \"user123\",\n            \"type\": \"group\",\n            \"groupId\": \"group1\",\n            \"traits\": {\n                \"name\": \"Company\",\n                \"industry\": \"Industry\",\n                \"employees\": 123\n            },\n            \"context\": {\n                \"traits\": {\n                    \"trait1\": \"new-val\"\n                },\n                \"ip\": \"14.5.67.21\",\n                \"library\": {\n                    \"name\": \"http\"\n                }\n            },\n            \"timestamp\": \"2020-01-21T00:21:34.208Z\"\n        },\n        {\n            \"userId\": \"user123\",\n            \"previousId\": \"previd1\",\n            \"type\":\"alias\",\n            \"context\": {\n                \"traits\": {\n                    \"trait1\": \"new-val\"\n                },\n                \"ip\": \"14.5.67.21\",\n                \"library\": {\n                    \"name\": \"http\"\n                }\n            },\n            \"timestamp\": \"2020-01-21T00:21:34.208Z\"\n        }\n\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{data_plane_url}}/v1/batch",
							"host": [
								"{{data_plane_url}}"
							],
							"path": [
								"v1",
								"batch"
							]
						},
						"description": "The `batch` call lets you send a series of `identify`, `track`, `page`, `group`, and `screen` requests in a single batch. This call helps you minimize the number of outbound requests, thus enabling better performance.\n\n> **RudderStack sets a maximum limit of 4 MB per batch request and 32 KB per call.**\n-----\n\n#### Accepted Fields\n\n|**Field**|**Type**|**Presence**|**Description**|\n|-----|-----|-----|-----|\n|`batch`|Array|Required|Sets the user ID in cases where there is no unique identifier for the user in the database.|\n|`context`|Object|Optional|Dictionary of information that provides context about a message. It is not directly related to the API call.|\n|`integrations`|Object|Optional|Contains the list of destinations to be enabled or disabled for the call.|\n\n> The `context` and `integrations` fields in the `batch` call are the same as in case of other calls. However, **they are merged** with the `context` or `integrations` (if any) fields in each of the calls included within `batch`.\n-------"
					},
					"response": [
						{
							"name": "Batch",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"batch\": [{\n            \"userId\": \"identified user id\",\n            \"anonymousId\": \"anon-id-new\",\n            \"type\": \"identify\",\n            \"context\": {\n                \"traits\": {\n                    \"trait1\": \"new-val\"\n                },\n                \"ip\": \"14.5.67.21\",\n                \"library\": {\n                    \"name\": \"http\"\n                }\n            },\n            \"timestamp\": \"2020-02-02T00:23:09.544Z\"\n        },\n        {\n            \"userId\": \"identified user id\",\n            \"anonymousId\": \"anon-id-new\",\n            \"event\": \"Product Purchased new\",\n            \"type\": \"track\",\n            \"properties\": {\n                \"name\": \"Shirt\",\n                \"revenue\": 4.99\n            },\n            \"context\": {\n                \"ip\": \"14.5.67.21\",\n                \"library\": {\n                    \"name\": \"http\"\n                }\n            },\n            \"timestamp\": \"2020-02-02T00:23:09.544Z\"\n        },\n        {\n            \"userId\": \"identified user id\",\n            \"anonymousId\": \"anon-id-new\",\n            \"name\": \"Page View\",\n            \"type\": \"page\",\n            \"properties\": {\n                \"title\": \"Home\",\n                \"path\": \"/\"\n            },\n            \"context\": {\n                \"ip\": \"14.5.67.21\",\n                \"library\": {\n                    \"name\": \"http\"\n                }\n            },\n            \"timestamp\": \"2020-02-02T00:23:09.544Z\"\n        },\n        {\n            \"userId\": \"identified user id\",\n            \"anonymousId\": \"anon-id-new\",\n            \"name\": \"Screen View\",\n            \"type\": \"screen\",\n            \"properties\": {\n                \"prop1\": \"5\"\n            },\n            \"context\": {\n                \"ip\": \"14.5.67.21\",\n                \"library\": {\n                    \"name\": \"http\"\n                }\n            },\n            \"timestamp\": \"2020-02-02T00:23:09.544Z\"\n        },\n        {\n            \"userId\": \"user123\",\n            \"type\": \"group\",\n            \"groupId\": \"group1\",\n            \"traits\": {\n                \"name\": \"Company\",\n                \"industry\": \"Industry\",\n                \"employees\": 123\n            },\n            \"context\": {\n                \"traits\": {\n                    \"trait1\": \"new-val\"\n                },\n                \"ip\": \"14.5.67.21\",\n                \"library\": {\n                    \"name\": \"http\"\n                }\n            },\n            \"timestamp\": \"2020-01-21T00:21:34.208Z\"\n        },\n        {\n            \"userId\": \"user123\",\n            \"previousId\": \"previd1\",\n            \"type\":\"alias\",\n            \"context\": {\n                \"traits\": {\n                    \"trait1\": \"new-val\"\n                },\n                \"ip\": \"14.5.67.21\",\n                \"library\": {\n                    \"name\": \"http\"\n                }\n            },\n            \"timestamp\": \"2020-01-21T00:21:34.208Z\"\n        }\n\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{data_plane_url}}/v1/batch",
									"host": [
										"{{data_plane_url}}"
									],
									"path": [
										"v1",
										"batch"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 21 Jul 2021 05:15:06 GMT"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "openresty/1.19.3.1"
								},
								{
									"key": "Vary",
									"value": "Origin"
								}
							],
							"cookie": [],
							"body": "OK"
						}
					]
				}
			],
			"description": "The **RudderStack HTTP API** lets you track your customer event data and route it to your desired destinations. \n\n> We recommend using the RudderStack SDKs for automatic tagging of the user identity as well as context, batching the events, and leveraging the retry functionality in case of failure. **However, if you cannot use our SDKs, it is possible to send your event data using the HTTP API**.\n--------\n\n## RudderStack Data Plane\n\nTo send HTTP requests, you should have a RudderStack server configured with your workspace token. Please refer to [**this section**](https://docs.rudderstack.com/getting-started/installing-and-setting-up-rudderstack) for installing and setting up RudderStack.\n\n> For more information on the RudderStack Data Plane, refer to our [**documentation**](https://docs.rudderstack.com/get-started/rudderstack-architecture#data-plane-architecture).\n-------  \n\n>**Note**: RudderStack's HTTP server should be accessible from your HTTP client.\n-----\n\n> A workspace token is unique to your RudderStack workspace.\n-----\n\n![Workspace Token](https://user-images.githubusercontent.com/59817155/126443739-c79ba47e-e0f9-4f2e-9ebb-f03d6042e94a.png)\n\n## Postman Collection\n\nImport the Postman collection using this [**URL**](https://www.postman.com/collections/480307c55ad2b9dd4e27) and edit the variables `source_write_key` and `data_plane_url` with your source write key and the RudderStack Data Plane URL. Now you can test all supported requests.\n\n> **Note**: If you are using RudderStack Cloud, the Data Plane URL should be set to: **https://hosted.rudderlabs.com**.\n------\n\n## HTTP Authorization\n\nRudderStack uses Basic Authentication for authenticating all the HTTP requests. The HTTP Basic Authentication requires a username and password, where:\n\n* Your source write key is the username, and\n* An empty string (`\" \"`) is the password.\n\nA source write key is the write key associated with the source you have configured in RudderStack, as shown:\n\n![Source Write Key](https://gblobscdn.gitbook.com/assets%2F-Lq5Ea6fHVg3dSxMCgyQ%2F-MdWwuzSa0-3wrwkgnpT%2F-MdWwzPaX4Q0SVIeePn8%2FScreen%20Shot%202021-07-01%20at%205.27.53%20PM.png?alt=media&token=15c7f42a-589f-4c1a-b2ae-bac781bf5b88)\n\nFor example, if your `writeKey` is `1Xk5DChfJAol3xtW7qNnK1apo5p`, then your HTTP request must have the following HTTP header:\n\n`Authorization: Basic MVhrNURDaGZKQW9sM3h0VzdxTm5LMWFwbzVwOg==`\n\nYou can refer to this sample [**Basic Auth header generator**](https://www.blitter.se/utils/basic-authentication-header-generator/) to verify your header.\n\n## HTTP Responses\n\nRudderStack returns a `200` response for successful API requests. It returns a `400` response for invalid requests along with an appropriate error message in the response.\n\nSome responses to the invalid requests include:\n\n* Request size too large (refer to the **Maximum Allowed Request Size** section below for more information)\n* Invalid JSON\n* Missing Authorization Header\n* Invalid Authorization Header\n\n## Request Size\n\nRudderStack allows a maximum of 32KB message size per call, while the `batch` API request allows a maximum call size of 4MB. If these limits are exceeded, RudderStack responds with a `400 Bad Request` response.",
			"auth": {
				"type": "basic",
				"basic": [
					{
						"key": "username",
						"value": "{{source_write_key}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Access Tokens",
			"item": [],
			"description": "To consume all the public RudderStack APIs, you will need access to them. This guide details the steps required to generate an access token and the operations associated with it.\n\n> Read more about RudderStack's Transformations feature [here](https://rudderstack.com/docs/transformations/#adding-a-transformation).\n\n* * *\n\n## Permissions\n\nThe [**RudderStack Cloud**](https://app.rudderstack.com/) users who have the Read/Write or Admin privileges can create their own access tokens and use them.\n\n## Operations on the Access Token\n\nTo use all the public RudderStack APIs, you can create your own Access Token by following the steps below:\n\n*   Log into your [**RudderStack dashboard**](https://app.rudderstack.com/).\n*   Click on the [**profile**](https://app.rudderstack.com/profile) tab in the left panel of the dashboard and choose the [**Personal Access Tokens**](https://app.rudderstack.com/profile/tokens) option, as shown:\n    \n\n![](https://user-images.githubusercontent.com/59817155/132644830-6542369b-94ae-4af6-b3bb-c1432e64cd2c.png)\n\n*   Then, click on **Generate new token** option. Enter the token **name** in the popup and click on **Generate**, as shown:\n    \n\n![](https://user-images.githubusercontent.com/59817155/132644851-12db3095-6ea5-423f-aa0c-5890f8d0e62f.png)\n\n*   You will then be able to see and copy the access token, as shown:\n    \n\n![](https://user-images.githubusercontent.com/59817155/132644881-879f4b14-064b-4168-9e52-69707480926e.png)\n\n> Make sure you copy the generated token. **You won't be able to see it again**.\n\n* * *\n\n*   To delete an existing token, click on the corresponding **Delete** option next to that token, and confirm by clicking on the **Yes, delete** button.\n*   To delete all the existing tokens, click on the **Revoke all** button on the top right and confirm, as shown:\n    \n\n![](https://user-images.githubusercontent.com/59817155/132644930-ce2124ac-897c-44d5-b51e-8201e03c1a6c.png)\n\n## Contact Us\n\nFor any queries on generating or using the access tokens to consume the RudderStack APIs, you can start a conversation on our [**Slack**](https://resources.rudderstack.com/join-rudderstack-slack) channel.",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Transformations API",
			"item": [
				{
					"name": "Transformations",
					"item": [
						{
							"name": "Create a Transformation",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Transformation 5\",\n    \"description\": \"Sample transformation 5\",\n    \"code\": \"export function transformEvent(event) { return event; }\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/transformations",
									"host": [
										"{{host}}"
									],
									"path": [
										"transformations"
									]
								},
								"description": "This request creates a transformation and gets its object as a response.\n\nThe following table highlights the query parameters when making the API request.\n\n## Query Parameters\n\n|Parameter|Type|Presence|Description|\n|------|------|------|------|\n|`publish`|Boolean|Optional| By default, this flag is set to `false`. If set to `true`, it publishes your transformation to the latest version and the code is made live for the incoming traffic.|\n\n## Body Parameters\n\nThe following table highlights the different body parameters when making the API request.\n\n|Parameter|Type|Presence|Description|\n|------|------|------|------|\n|`events`|Object|Optional|You can pass an array of JSON events to be tested for your code.|\n|`destinationIds`|Array|Optional|You can pass an array of `destinationIds` that you wish to connect with this transformation. You can connect only if `publish` is set to `true`.|\n|`name`|String|Required|Name of the transformation that you wish to create.|\n|`code`|String|Required|The transformation code goes here.|\n|`description`|String|Optional|The description of the transformation goes here.|\n\n\n## Creating a Transformation\nYou can create a transformation in one of the following ways:\n\n- `publish: true` - In this case, RudderStack maintains two copies of the transformation. Among these, one is published and the other is used for revisions. You can connect the published transformation to a destination and its code is made live for incoming traffic.\n\n- `publish: false` - In this case, RudderStack only creates revisions for the transformation. This means that you cannot connect any destinations to the transformation and it cannot be used for any incoming event traffic. \n\n> **Note**: If you wish to publish some revisions of transformations you can do so using the **Publish API** (refer below).\n----"
							},
							"response": [
								{
									"name": "Create a Transformation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Transformation 1\",\n    \"description\": \"Sample transformation\",\n    \"code\": \"export function transformEvent(event) { return event; }\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/transformations",
											"host": [
												"{{host}}"
											],
											"path": [
												"transformations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "303"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Jul 2021 07:27:50 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 8c6bb7481f30b8407e3bba2378393547.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "BLR50-C3"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "l9P5_MfKpaORIIb0zrQ6PsHPeOtZtAPDUer9jGA7XbYGGE6DUTeDtg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"1vIRZIkYLdEllGnRNinhbFoTx9Z\",\n    \"versionId\": \"1vIRZI8SNMRnXFuO7gGjLdr2BLx\",\n    \"name\": \"Transformation 1\",\n    \"description\": \"Sample transformation\",\n    \"code\": \"export function transformEvent(event) { return event; }\",\n    \"codeVersion\": \"1\",\n    \"createdAt\": \"2021-07-14T07:27:50.770Z\",\n    \"updatedAt\": \"2021-07-14T07:27:50.770Z\"\n}"
								}
							]
						},
						{
							"name": "Create and Publish a Transformation",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":\"Transformation 3\",\n    \"code\":\"export function transformEvent(event) { return event; }\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/transformations?publish=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"transformations"
									],
									"query": [
										{
											"key": "publish",
											"value": "true"
										}
									]
								},
								"description": "This request creates and publishes a transformation.\n\nYou can create a transformation in one of the following ways:\n\n- `publish: true` - In this case, RudderStack maintains two copies of the transformer. Among these, one is published and the other is used for revisions. You can connect the published version to a destination and its code is made live for incoming traffic.\n\n- `publish: false` - In this case, RudderStack only creates revisions for the transformation. This means that you cannot connect any destinations to the transformation and it cannot be used for any incoming event traffic."
							},
							"response": [
								{
									"name": "Create and Publish a Transformation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\":\"Transformation 5\",\n    \"code\":\"export function transformEvent(event) { return event; }\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/transformations?publish=true",
											"host": [
												"{{host}}"
											],
											"path": [
												"transformations"
											],
											"query": [
												{
													"key": "publish",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "300"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Jul 2021 08:58:29 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 640fa25b6b0e269c235d870b4229e90c.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MAA51-C2"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "l74S9CEUXJ4e5-mxQU1Ebk1YXjZ2YjIzEotq0evUnVbBHyx76qI99w=="
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"1vIcaq43otQJoKK5GpnC7YLsv1t\",\n    \"versionId\": \"1vIcar0qoEdoL1Tk1pszUg9vEmG\",\n    \"name\": \"Transformation 5\",\n    \"description\": \"\",\n    \"code\": \"export function transformEvent(event) { return event; }\",\n    \"codeVersion\": \"1\",\n    \"createdAt\": \"2021-07-14T08:58:29.692Z\",\n    \"updatedAt\": \"2021-07-14T08:58:29.692Z\",\n    \"destinations\": []\n}"
								}
							]
						},
						{
							"name": "List All Transformations",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/transformations",
									"host": [
										"{{host}}"
									],
									"path": [
										"transformations"
									]
								},
								"description": "This request gets all the **published transformations** for a particular workspace."
							},
							"response": [
								{
									"name": "List All Transformations",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/transformations",
											"host": [
												"{{host}}"
											],
											"path": [
												"transformations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "623"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Jul 2021 09:09:00 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 13cacaf041f81d18c39777fbcdf7705d.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "DEL54-C1"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "yF9WQD1CG6ZFeoDAlr9E342vY891NTBIKZogSFHKdbazszjmKF0KPA=="
										}
									],
									"cookie": [],
									"body": "{\n    \"transformations\": [\n        {\n            \"id\": \"1vIcaq43otQJoKK5GpnC7YLsv1t\",\n            \"versionId\": \"1vIcar0qoEdoL1Tk1pszUg9vEmG\",\n            \"name\": \"Transformation 5\",\n            \"description\": \"\",\n            \"code\": \"export function transformEvent(event) { return event; }\",\n            \"codeVersion\": \"1\",\n            \"createdAt\": \"2021-07-14T08:58:29.708Z\",\n            \"updatedAt\": \"2021-07-14T08:58:29.708Z\",\n            \"destinations\": []\n        },\n        {\n            \"id\": \"1vIdrehlhNup8ecEkXo9GJr2zzf\",\n            \"versionId\": \"1vIdrdZEEr3t63Nw1rHqKGkyjXw\",\n            \"name\": \"Transformation 1\",\n            \"description\": \"\",\n            \"code\": \"export function transformEvent(event) { return event; }\",\n            \"codeVersion\": \"1\",\n            \"createdAt\": \"2021-07-14T09:08:56.680Z\",\n            \"updatedAt\": \"2021-07-14T09:08:56.680Z\",\n            \"destinations\": []\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Retrieve a Single Transformation",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/transformations/{{id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"transformations",
										"{{id}}"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "This request retrieves the published transformations from the specified transformation `id`."
							},
							"response": [
								{
									"name": "Retrieve a Single Transformation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/transformations/1vIdrehlhNup8ecEkXo9GJr2zzf",
											"host": [
												"{{host}}"
											],
											"path": [
												"transformations",
												"1vIdrehlhNup8ecEkXo9GJr2zzf"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "300"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Jul 2021 09:36:48 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 2aaa1cb37215977ac4e1bf4ec5700c33.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "BLR50-C3"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "v0pOjVO8v8s1DJ800gAAduCht2c59uXvKJDuQaOo2Kf0E-x-xIV3dg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"1vIdrehlhNup8ecEkXo9GJr2zzf\",\n    \"versionId\": \"1vIdrdZEEr3t63Nw1rHqKGkyjXw\",\n    \"name\": \"Transformation 1\",\n    \"description\": \"\",\n    \"code\": \"export function transformEvent(event) { return event; }\",\n    \"codeVersion\": \"1\",\n    \"createdAt\": \"2021-07-14T09:08:56.680Z\",\n    \"updatedAt\": \"2021-07-14T09:08:56.680Z\",\n    \"destinations\": []\n}"
								}
							]
						},
						{
							"name": "Update a Transformation",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":\"Updated transformation\",\n    \"description\": \"Updated description\",\n    \"code\":\"export function transformEvent(event) { return event; }\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/transformations/{{id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"transformations",
										"{{id}}"
									]
								},
								"description": "This request updates a transformation by creating a new revision. If the `publish` flag is set is `true`,  the code becomes live for the event traffic. If the `publish` flag is `false` , it only creates a new revision for that transformation without publishing it.\n\n## Query Parameters\n\n|Parameter|Type|Presence|Description|\n|------|------|------|------|\n|`publish`|Boolean|Optional| By default, this flag is set to `false`. If set to `true`, it publishes your transformation and the code is made live for the incoming traffic.|\n\n## Body Parameters\n\nThe following table highlights the different body parameters when making this API request.\n\n|Parameter|Type|Presence|Description|\n|------|------|------|------|\n|`events`|Object|Optional|You can pass an array of JSON events to test your code.|\n|`code`|String|Update the code of your existing transformation.|\n|`description`|String|Optional|Updated description of the transformation goes here.|"
							},
							"response": [
								{
									"name": "Update a Transformation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\":\"Updated transformation\",\n    \"description\": \"Updated description\",\n    \"code\":\"export function transformEvent(event) { return event; }\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/transformations/1vIdrehlhNup8ecEkXo9GJr2zzf",
											"host": [
												"{{host}}"
											],
											"path": [
												"transformations",
												"1vIdrehlhNup8ecEkXo9GJr2zzf"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "307"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Jul 2021 09:40:18 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 2aaa1cb37215977ac4e1bf4ec5700c33.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "BLR50-C3"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "wkoIp9X6_GkaOmyWJrdRoUWOBDsGDyWmYS-IwzMyJNRCGA3kT5kacA=="
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"1vIdrehlhNup8ecEkXo9GJr2zzf\",\n    \"versionId\": \"1vIhg7EnRFP2nTf0CbnSbK58FgB\",\n    \"name\": \"Updated transformation\",\n    \"description\": \"Updated description\",\n    \"code\": \"export function transformEvent(event) { return event; }\",\n    \"codeVersion\": \"1\",\n    \"createdAt\": \"2021-07-14T09:40:18.946Z\",\n    \"updatedAt\": \"2021-07-14T09:40:18.946Z\"\n}"
								}
							]
						},
						{
							"name": "Update and Publish a Transformation",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":\"Updated sample transformation\",\n    \"description\": \"Updated sample transformation ready to be published\",\n    \"code\":\"export function transformEvent(event) { return event; }\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/transformations/{{id}}?publish=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"transformations",
										"{{id}}"
									],
									"query": [
										{
											"key": "publish",
											"value": "true"
										}
									]
								},
								"description": "This request updates a transformation by creating a new revision and publishes it so that the code is live for all the incoming event traffic."
							},
							"response": [
								{
									"name": "Update and Publish a Transformation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\":\"Updated sample transformation\",\n    \"description\": \"Updated sample transformation ready to be published\",\n    \"code\":\"export function transformEvent(event) { return event; }\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/transformations/1vIdrehlhNup8ecEkXo9GJr2zzf?publish=true",
											"host": [
												"{{host}}"
											],
											"path": [
												"transformations",
												"1vIdrehlhNup8ecEkXo9GJr2zzf"
											],
											"query": [
												{
													"key": "publish",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "346"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Jul 2021 09:43:40 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 2aaa1cb37215977ac4e1bf4ec5700c33.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "BLR50-C3"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "fqV4Yd9GCxLoHD5HPht1S55J2GE00iBwiBZ8ZCrOo2xwSrcNmitPiQ=="
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"1vIdrehlhNup8ecEkXo9GJr2zzf\",\n    \"versionId\": \"1vIi5aGX27kXY60eNl5dixyNCET\",\n    \"name\": \"Updated sample transformation\",\n    \"description\": \"Updated sample transformation ready to be published\",\n    \"code\": \"export function transformEvent(event) { return event; }\",\n    \"codeVersion\": \"1\",\n    \"createdAt\": \"2021-07-14T09:43:40.628Z\",\n    \"updatedAt\": \"2021-07-14T09:43:40.628Z\"\n}"
								}
							]
						},
						{
							"name": "Delete a Transformation",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/transformations/{{transformation_id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"transformations",
										"{{transformation_id}}"
									]
								},
								"description": "This request deletes a transformation associated with the specified ID.\n\n> Note that RudderStack does not delete a transformation revision.\n------"
							},
							"response": [
								{
									"name": "Delete a Transformation",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{host}}/transformations/1vIcaq43otQJoKK5GpnC7YLsv1t",
											"host": [
												"{{host}}"
											],
											"path": [
												"transformations",
												"1vIcaq43otQJoKK5GpnC7YLsv1t"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "16"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Jul 2021 09:48:17 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 2aaa1cb37215977ac4e1bf4ec5700c33.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "BLR50-C3"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "E2gYJ3CxVOQIcjSA7Xy0kVqP1SzFZx1rerg_CoI6ELQIZUBZDN-GMA=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true\n}"
								}
							]
						},
						{
							"name": "Get All Transformation Revisions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/transformations/{{id}}/versions",
									"host": [
										"{{host}}"
									],
									"path": [
										"transformations",
										"{{id}}",
										"versions"
									],
									"query": [
										{
											"key": "count",
											"value": "",
											"description": "Gets the number of objects in your array. By default, it always returns the first 5 objects.",
											"disabled": true
										},
										{
											"key": "orderBy",
											"value": "",
											"description": "You can get all the versions in the ascending order if you pass ASC as the value, or in the descending order if DESC is passed.",
											"disabled": true
										}
									]
								},
								"description": "This request gets all your transformation revisions by passing an ID.\n\n#### Query Parameters\n\n|**Key**|**Type**|**Presence**|**Description**|\n|------|------|------|------|\n|`count`|Number|Optional|Gets the number of objects in your array. By default, it always returns the first 5 objects.|\n|`orderBy`|String|Optional|You can get all the versions in the ascending order if you pass `ASC` as the value, or in the descending order if `DESC` is passed.|"
							},
							"response": [
								{
									"name": "Get All Transformation Revisions",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/transformations/1vIdrehlhNup8ecEkXo9GJr2zzf/versions",
											"host": [
												"{{host}}"
											],
											"path": [
												"transformations",
												"1vIdrehlhNup8ecEkXo9GJr2zzf",
												"versions"
											],
											"query": [
												{
													"key": "count",
													"value": null,
													"description": "Gets the number of objects in your array. By default, it always returns the first 5 objects.",
													"disabled": true
												},
												{
													"key": "orderBy",
													"value": null,
													"description": "You can get all the versions in the ascending order if you pass ASC as the value, or in the descending order if DESC is passed.",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1235"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Jul 2021 09:51:32 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 2aaa1cb37215977ac4e1bf4ec5700c33.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "BLR50-C3"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "dKUixYDS0r3qMPw07fKPLyLGIE9LTbk8noRlRRk40_UYsOZQiWZHxg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"TransformationVersions\": [\n        {\n            \"id\": \"1vIdrehlhNup8ecEkXo9GJr2zzf\",\n            \"versionId\": \"1vIdrdZEEr3t63Nw1rHqKGkyjXw\",\n            \"name\": \"Transformation 1\",\n            \"description\": \"\",\n            \"code\": \"export function transformEvent(event) { return event; }\",\n            \"codeVersion\": \"1\",\n            \"createdAt\": \"2021-07-14T09:08:56.662Z\",\n            \"updatedAt\": \"2021-07-14T09:08:56.662Z\"\n        },\n        {\n            \"id\": \"1vIdrehlhNup8ecEkXo9GJr2zzf\",\n            \"versionId\": \"1vIhg7EnRFP2nTf0CbnSbK58FgB\",\n            \"name\": \"Updated transformation\",\n            \"description\": \"Updated description\",\n            \"code\": \"export function transformEvent(event) { return event; }\",\n            \"codeVersion\": \"1\",\n            \"createdAt\": \"2021-07-14T09:40:18.946Z\",\n            \"updatedAt\": \"2021-07-14T09:40:18.946Z\"\n        },\n        {\n            \"id\": \"1vIdrehlhNup8ecEkXo9GJr2zzf\",\n            \"versionId\": \"1vIhvTd6iJYw30voPnTffrsUDVE\",\n            \"name\": \"t1\",\n            \"description\": \"\",\n            \"code\": \"export function transformEvent(event) { return event; }\",\n            \"codeVersion\": \"1\",\n            \"createdAt\": \"2021-07-14T09:42:20.324Z\",\n            \"updatedAt\": \"2021-07-14T09:42:20.324Z\"\n        },\n        {\n            \"id\": \"1vIdrehlhNup8ecEkXo9GJr2zzf\",\n            \"versionId\": \"1vIi5aGX27kXY60eNl5dixyNCET\",\n            \"name\": \"Updated sample transformation\",\n            \"description\": \"Updated sample transformation ready to be published\",\n            \"code\": \"export function transformEvent(event) { return event; }\",\n            \"codeVersion\": \"1\",\n            \"createdAt\": \"2021-07-14T09:43:40.628Z\",\n            \"updatedAt\": \"2021-07-14T09:43:40.628Z\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Get a Single Transformation Revision",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/transformations/{{id}}/versions/{{version_id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"transformations",
										"{{id}}",
										"versions",
										"{{version_id}}"
									]
								},
								"description": "This request fetches a single transformation revision."
							},
							"response": [
								{
									"name": "Get a Single Transformation Revision",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/transformations/1vIdrehlhNup8ecEkXo9GJr2zzf/versions/1vIdrdZEEr3t63Nw1rHqKGkyjXw",
											"host": [
												"{{host}}"
											],
											"path": [
												"transformations",
												"1vIdrehlhNup8ecEkXo9GJr2zzf",
												"versions",
												"1vIdrdZEEr3t63Nw1rHqKGkyjXw"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "282"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Jul 2021 09:54:29 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 2aaa1cb37215977ac4e1bf4ec5700c33.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "BLR50-C3"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "MOIXvnu0HJAhl9cCFT_LnD-yQcNm7tp6-MQIcciY7K-dO4WPdHM6kA=="
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"1vIdrehlhNup8ecEkXo9GJr2zzf\",\n    \"versionId\": \"1vIdrdZEEr3t63Nw1rHqKGkyjXw\",\n    \"name\": \"Transformation 1\",\n    \"description\": \"\",\n    \"code\": \"export function transformEvent(event) { return event; }\",\n    \"codeVersion\": \"1\",\n    \"createdAt\": \"2021-07-14T09:08:56.662Z\",\n    \"updatedAt\": \"2021-07-14T09:08:56.662Z\"\n}"
								}
							]
						}
					],
					"description": "RudderStack Transformations let you write custom JavaScript code that allows you transform your events into a destination-specific format.\n\nThe following table explains the different fields in the transformer payload:\n\n|Field|Type|Requirement|Description|\n|:----|:----|:----|:----|\n|`name`|String|Required|Sets the name of the transformer.|\n|`description`|String|Optional|Gives a description of the transformer.|\n|`code`|String|Optional|Refers to the user-defined code that maps the source events to the destinations as defined by the user.|\n|`codeVersion`|String|Optional|This is an integer data always set to version 1 for the API calls.|\n|`createdAt`|Date|Optional|Refers to the timestamp of the transformer when it is created.|\n|`updatedAt`|Date|Optional|Refers to the timestamp of the transformer when it is updated.|\n|`versionId`|String|Optional|Maintains a version of the transformer every time it is updated.|\n|`workspaceId`|Object|Optional|The workspace ID on which the transformation is created.|\n|`destinations`|Array|Optional|List of all the destination IDs to which your transformation is connected.|"
				},
				{
					"name": "Libraries",
					"item": [
						{
							"name": "Create a library",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Transformation Library 3\",\n    \"description\": \"Some library description\",\n    \"code\": \"    export default function cube(x) { return x * x * x; }\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/libraries",
									"host": [
										"{{host}}"
									],
									"path": [
										"libraries"
									]
								},
								"description": "This request creates a transformation library and gets the corresponding JSON object as a response.\n\n#### Body Parameters\n\n|**Parameter**|**Type**|**Presence**|**Description**|\n|-----|-----|-----|-----|\n|`name`|String|Required|Name of the transformation library that you wish to create.|\n|`code`|String|Required|Code the transformation library goes here.|\n|`description`|String|Optional|The description of the transformation library goes here.|"
							},
							"response": [
								{
									"name": "Create a library",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Transformation Library 3\",\n    \"description\": \"Some library description\",\n    \"code\": \"    export default function cube(x) { return x * x * x; }\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/libraries",
											"host": [
												"{{host}}"
											],
											"path": [
												"libraries"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "336"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Jul 2021 10:33:21 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 5bad075c7a8e6feed0664f28dc75de80.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MAA50-C2"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "cLjifCCtwAAOg3tTq7SGL_9qNvwxqfHJYCYVNmlIc5Zt7wNDVHmrWA=="
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"1vIo8AHR6nBoUOj0yrpQ6tdOS9o\",\n    \"versionId\": \"1vIo87EmOpqnB1avdnmXHt5Yu9E\",\n    \"name\": \"Transformation Library 3\",\n    \"description\": \"Some library description\",\n    \"code\": \"    export default function cube(x) { return x * x * x; }\",\n    \"createdAt\": \"2021-07-14T10:33:21.908Z\",\n    \"updatedAt\": \"2021-07-14T10:33:21.908Z\",\n    \"importName\": \"transformationLibrary3\"\n}"
								}
							]
						},
						{
							"name": "Create and Publish a Library",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Sample Transformation Library 1\",\n    \"description\": \"Library description\",\n    \"code\": \"    export default function cube(x) { return x * x * x; }\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/libraries?publish=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"libraries"
									],
									"query": [
										{
											"key": "publish",
											"value": "true"
										}
									]
								},
								"description": "This request creates and publishes a transformation library.\n\n#### Query Parameters\n\n|**Parameter**|**Type**|**Presence**|**Description**|\n|-----|-----|-----|-----|\n|`publish`|Boolean|Optional|By default, this flag is set to `false`. If set to `true`, this option is used to publish your transformation library to its latest version.|\n\n\n> **Note**: The `publish` flag for a transformation library works the same way as a transformation.\n-----\n\n#### Body Parameters\n\n|**Parameter**|**Type**|**Presence**|**Description**|\n|-----|-----|-----|-----|\n|`name`|String|Required|Name of the transformation library that you wish to create.|\n|`code`|String|Required|Code the transformation library goes here.|\n|`description`|String|Optional|The description of the transformation library goes here.|"
							},
							"response": [
								{
									"name": "Create and Publish a Library",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Sample Transformation Library\",\n    \"description\": \"Library description\",\n    \"code\": \"    export default function cube(x) { return x * x * x; }\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/libraries?publish=true",
											"host": [
												"{{host}}"
											],
											"path": [
												"libraries"
											],
											"query": [
												{
													"key": "publish",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "341"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Jul 2021 10:34:51 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 5bad075c7a8e6feed0664f28dc75de80.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MAA50-C2"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "8aqw69q2DwYnjlQAnfssLi-7tbBMbYEFq5HM4pb11YVpT9on32awWQ=="
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"1vIoJSpWlMAomjFUD0nhZOguZmG\",\n    \"versionId\": \"1vIoJVVMJTUbMWDe44H52kOwZ41\",\n    \"name\": \"Sample Transformation Library\",\n    \"description\": \"Library description\",\n    \"code\": \"    export default function cube(x) { return x * x * x; }\",\n    \"createdAt\": \"2021-07-14T10:34:51.592Z\",\n    \"updatedAt\": \"2021-07-14T10:34:51.592Z\",\n    \"importName\": \"sampleTransformationLibrary\"\n}"
								}
							]
						},
						{
							"name": "List All Libraries",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/libraries",
									"host": [
										"{{host}}"
									],
									"path": [
										"libraries"
									]
								},
								"description": "This request fetches all the published transformation libraries."
							},
							"response": [
								{
									"name": "List All Libraries",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/libraries",
											"host": [
												"{{host}}"
											],
											"path": [
												"libraries"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "702"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Jul 2021 10:38:51 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 5bad075c7a8e6feed0664f28dc75de80.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MAA50-C2"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "Yo3rayLNYBYSStH7A3I32IB2GQ72P99vKDUhjoOFN-unQeYgxIfLkw=="
										}
									],
									"cookie": [],
									"body": "{\n    \"libraries\": [\n        {\n            \"id\": \"1vIoJSpWlMAomjFUD0nhZOguZmG\",\n            \"versionId\": \"1vIoJVVMJTUbMWDe44H52kOwZ41\",\n            \"name\": \"Sample Transformation Library\",\n            \"description\": \"Library description\",\n            \"code\": \"    export default function cube(x) { return x * x * x; }\",\n            \"createdAt\": \"2021-07-14T10:34:51.606Z\",\n            \"updatedAt\": \"2021-07-14T10:34:51.606Z\",\n            \"importName\": \"sampleTransformationLibrary\"\n        },\n        {\n            \"id\": \"1vIomrQz5z9bkDcPQGAUGiFLl9N\",\n            \"versionId\": \"1vIomqeY6mWqDO297kDp6f0MsUh\",\n            \"name\": \"Sample Transformation Library 1\",\n            \"description\": \"Library description\",\n            \"code\": \"    export default function cube(x) { return x * x * x; }\",\n            \"createdAt\": \"2021-07-14T10:38:45.823Z\",\n            \"updatedAt\": \"2021-07-14T10:38:45.823Z\",\n            \"importName\": \"sampleTransformationLibrary1\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Retrieve a Single Library",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/libraries/:id",
									"host": [
										"{{host}}"
									],
									"path": [
										"libraries",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{library_id}}"
										}
									]
								},
								"description": "Retrieves a single published transformation library based on the specified `id`."
							},
							"response": [
								{
									"name": "Retrieve a Single Library",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/libraries/1vIoJSpWlMAomjFUD0nhZOguZmG",
											"host": [
												"{{host}}"
											],
											"path": [
												"libraries",
												"1vIoJSpWlMAomjFUD0nhZOguZmG"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "341"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Jul 2021 10:40:53 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 5bad075c7a8e6feed0664f28dc75de80.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MAA50-C2"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "TykJASDD4yKxgXXkwku2d8lxxLgkjoIiLka7UBUMIc5FpJdfruDCtA=="
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"1vIoJSpWlMAomjFUD0nhZOguZmG\",\n    \"versionId\": \"1vIoJVVMJTUbMWDe44H52kOwZ41\",\n    \"name\": \"Sample Transformation Library\",\n    \"description\": \"Library description\",\n    \"code\": \"    export default function cube(x) { return x * x * x; }\",\n    \"createdAt\": \"2021-07-14T10:34:51.606Z\",\n    \"updatedAt\": \"2021-07-14T10:34:51.606Z\",\n    \"importName\": \"sampleTransformationLibrary\"\n}"
								}
							]
						},
						{
							"name": "Update a Library",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Updated library code from cube function to a sum function\",\n    \"code\": \"    export default function sum(x) { return x + x; }\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/libraries/:id",
									"host": [
										"{{host}}"
									],
									"path": [
										"libraries",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{library_id}}"
										}
									]
								},
								"description": "This request lets you update the code and description of the transformation library by specifying its `id`.\n\n> **Note**: You **cannot** change the name of the transformation library using this request.\n----\n\n#### Body Parameters\n\n|**Parameter**|**Type**|**Presence**|**Description**|\n|-----|-----|-----|-----|\n|`description`|String|Optional|The updated description of the transformation library goes here.|\n|`code`|String|Required|The updated code the transformation library goes here.|"
							},
							"response": [
								{
									"name": "Update a Library",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"Updated library code from cube function to a sum function\",\n    \"code\": \"    export default function sum(x) { return x + x; }\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/libraries/1vIoJSpWlMAomjFUD0nhZOguZmG",
											"host": [
												"{{host}}"
											],
											"path": [
												"libraries",
												"1vIoJSpWlMAomjFUD0nhZOguZmG"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "374"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Jul 2021 10:48:25 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 5bad075c7a8e6feed0664f28dc75de80.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MAA50-C2"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "Y1Xt-ayJgQanj2uEoeIgCbEimQZcSgT7XyONw0nVbexc5R_01kiMwQ=="
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"1vIoJSpWlMAomjFUD0nhZOguZmG\",\n    \"versionId\": \"1vIpxntV2xzGc05H8trHmrLVp0W\",\n    \"name\": \"Sample Transformation Library\",\n    \"description\": \"Updated library code from cube function to a sum function\",\n    \"code\": \"    export default function sum(x) { return x + x; }\",\n    \"createdAt\": \"2021-07-14T10:48:25.623Z\",\n    \"updatedAt\": \"2021-07-14T10:48:25.623Z\",\n    \"importName\": \"sampleTransformationLibrary\"\n}"
								}
							]
						},
						{
							"name": "Update and Publish a Library",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Updated library description\",\n    \"code\": \"    export default function sum(x) { return x + x; }\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/libraries/:id?publish=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"libraries",
										":id"
									],
									"query": [
										{
											"key": "publish",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "{{library_id}}"
										}
									]
								},
								"description": "This request lets you update the code and description of the transformation library by specifying its `id` and gives you the option of publishing this library.\n\n> **Note**: Updating the library with the `publish` option has the same flow as that of the transformations.\n\n#### Query Parameters\n\n|**Parameter**|**Type**|**Presence**|**Description**|\n|-----|-----|-----|-----|\n|`publish`|Boolean|Optional|By default, this flag is set to `false`. If set to `true`, this option is used to publish your transformation library to its latest version.|\n\n#### Body Parameters\n\n|**Parameter**|**Type**|**Presence**|**Description**|\n|-----|-----|-----|-----|\n|`description`|String|Optional|The updated description of the transformation library goes here.|\n|`code`|String|Optional|The updated code of the transformation library goes here.|"
							},
							"response": [
								{
									"name": "Update and Publish a Library",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"Updated library description\",\n    \"code\": \"    export default function sum(x) { return x + x; }\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/libraries/1vIoJSpWlMAomjFUD0nhZOguZmG?publish=true",
											"host": [
												"{{host}}"
											],
											"path": [
												"libraries",
												"1vIoJSpWlMAomjFUD0nhZOguZmG"
											],
											"query": [
												{
													"key": "publish",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "344"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Jul 2021 10:53:47 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 86a35a0efb03cdb9630c3c53c0109310.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MAA51-C2"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "edgKYBoB2Lkou7v7x0VSohHiqbbx3kUhbDpiZ3NX7U6TOhbp5WaLzw=="
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"1vIoJSpWlMAomjFUD0nhZOguZmG\",\n    \"versionId\": \"1vIqcGyY4qHtrnPJGFwOFDMQ6Zk\",\n    \"name\": \"Sample Transformation Library\",\n    \"description\": \"Updated library description\",\n    \"code\": \"    export default function sum(x) { return x + x; }\",\n    \"createdAt\": \"2021-07-14T10:53:47.425Z\",\n    \"updatedAt\": \"2021-07-14T10:53:47.425Z\",\n    \"importName\": \"sampleTransformationLibrary\"\n}"
								}
							]
						},
						{
							"name": "List All Library Revisions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/libraries/:id/versions",
									"host": [
										"{{host}}"
									],
									"path": [
										"libraries",
										":id",
										"versions"
									],
									"query": [
										{
											"key": "count",
											"value": "5",
											"description": "(Optional) If you want a specific number of versions for the library ID, pass this key. By default, this request always returns the first 5 objects.",
											"disabled": true
										},
										{
											"key": "orderBy",
											"value": "ASC/DESC",
											"description": "(Optional) To get the library versions in the ascending or descending order, pass this key. By default, the request always returns the ascending order of versions by considering the time of creation of the library version.",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "{{library_id}}"
										}
									]
								},
								"description": "This request retrieves all the library revisions for the specified library `id`.\n\n#### Query Parameters\n\n|**Parameter**|**Type**|**Presence**|**Description**|\n|-----|-----|-----|-----|\n|`count`|Number|Optional|If you want a specific number of library versions for the specified library ID, pass this parameter. By default, the request always returns the first 5 versions.|\n|`orderBy`|String|Optional|To get the library versions in the ascending or descending order, pass this key. By default, the request always returns the ascending order of versions by considering the time of creation of the library version.|"
							},
							"response": [
								{
									"name": "List All Library Revisions",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/libraries/1vIoJSpWlMAomjFUD0nhZOguZmG/versions",
											"host": [
												"{{host}}"
											],
											"path": [
												"libraries",
												"1vIoJSpWlMAomjFUD0nhZOguZmG",
												"versions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "948"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Jul 2021 10:58:25 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 73adcfed29c649290e9f9cbd1309c107.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MAA51-C2"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "6veJSl_Gfj_v7KF6C1uBtyf2yAKspHHmzSUawbQT0V2db0qNERF5Aw=="
										}
									],
									"cookie": [],
									"body": "{\n    \"libraries\": [\n        {\n            \"id\": \"1vIoJSpWlMAomjFUD0nhZOguZmG\",\n            \"versionId\": \"1vIoJVVMJTUbMWDe44H52kOwZ41\",\n            \"name\": \"Sample Transformation Library\",\n            \"description\": \"Library description\",\n            \"code\": \"    export default function cube(x) { return x * x * x; }\",\n            \"createdAt\": \"2021-07-14T10:34:51.592Z\",\n            \"updatedAt\": \"2021-07-14T10:34:51.592Z\"\n        },\n        {\n            \"id\": \"1vIoJSpWlMAomjFUD0nhZOguZmG\",\n            \"versionId\": \"1vIpxntV2xzGc05H8trHmrLVp0W\",\n            \"name\": \"Sample Transformation Library\",\n            \"description\": \"Updated library code from cube function to a sum function\",\n            \"code\": \"    export default function sum(x) { return x + x; }\",\n            \"createdAt\": \"2021-07-14T10:48:25.623Z\",\n            \"updatedAt\": \"2021-07-14T10:48:25.623Z\"\n        },\n        {\n            \"id\": \"1vIoJSpWlMAomjFUD0nhZOguZmG\",\n            \"versionId\": \"1vIqcGyY4qHtrnPJGFwOFDMQ6Zk\",\n            \"name\": \"Sample Transformation Library\",\n            \"description\": \"Updated library description\",\n            \"code\": \"    export default function sum(x) { return x + x; }\",\n            \"createdAt\": \"2021-07-14T10:53:47.425Z\",\n            \"updatedAt\": \"2021-07-14T10:53:47.425Z\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Retrieve a Single Library Revision",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/libraries/:id/versions/:versionId",
									"host": [
										"{{host}}"
									],
									"path": [
										"libraries",
										":id",
										"versions",
										":versionId"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{library_id}}"
										},
										{
											"key": "versionId",
											"value": "{{library_version_id}}"
										}
									]
								},
								"description": "This request retrieves a single library revision by specifying the library's `versionId`."
							},
							"response": [
								{
									"name": "Retrieve a Single Library Revision",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/libraries/1vIoJSpWlMAomjFUD0nhZOguZmG/versions/1vIpxntV2xzGc05H8trHmrLVp0W",
											"host": [
												"{{host}}"
											],
											"path": [
												"libraries",
												"1vIoJSpWlMAomjFUD0nhZOguZmG",
												"versions",
												"1vIpxntV2xzGc05H8trHmrLVp0W"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "331"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Jul 2021 11:00:03 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 73adcfed29c649290e9f9cbd1309c107.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "MAA51-C2"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "r2JkoBzhb6OzgmdYJMCFunw_Xtdzii_iYNKGeoK7oIulcgoc-FQ9ew=="
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"1vIoJSpWlMAomjFUD0nhZOguZmG\",\n    \"versionId\": \"1vIpxntV2xzGc05H8trHmrLVp0W\",\n    \"name\": \"Sample Transformation Library\",\n    \"description\": \"Updated library code from cube function to a sum function\",\n    \"code\": \"    export default function sum(x) { return x + x; }\",\n    \"createdAt\": \"2021-07-14T10:48:25.623Z\",\n    \"updatedAt\": \"2021-07-14T10:48:25.623Z\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Test & Publish API",
					"item": [
						{
							"name": "Test a Transformation / Library",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transformations\": [\n        {\n            \"versionId\": \"1vIi5aGX27kXY60eNl5dixyNCET\",\n            \"testInput\": [\n                {\n                    \"anonymousId\": \"8d872292709c6fbe\",\n                    \"channel\": \"mobile\"\n                },\n                {\n                    \"anonymousId\": \"8d872292709c6fbe\",\n                    \"channel\": \"mobile\"\n                }\n            ]\n        }\n    ],\n    \"libraries\": [\n        {\n            \"versionId\": \"1vIqcGyY4qHtrnPJGFwOFDMQ6Zk\"\n        },\n        {\n            \"versionId\": \"1vIomqeY6mWqDO297kDp6f0MsUh\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/transformations/libraries/test",
									"host": [
										"{{host}}"
									],
									"path": [
										"transformations",
										"libraries",
										"test"
									]
								},
								"description": "This request tests any transformation or library revisions.\n\n#### Body Parameters\n\n|**Parameter**|**Type**|**Presence**|**Description**|\n|-----|-----|-----|-----|\n|`versionId`|String|Required|The transformation `versionId` to be published.|\n|`testInput`|String|Optional|Array of JSON objects in a string format.|\n|`transformations`|Array|Optional|An array of objects with the property as `versionId` and `testInput`.|\n|`libraries`|Array|Optional|An array of objects with the property as the library `versionId`.|\n\n#### Note\n\nThis API lets you test your transformation and library revisions.\n\n>**Output response shows successful and failed results**\n--------"
							},
							"response": [
								{
									"name": "Test a Transformation / Library",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"transformations\": [\n        {\n            \"versionId\": \"1vIi5aGX27kXY60eNl5dixyNCET\",\n            \"testInput\": [\n                {\n                    \"anonymousId\": \"8d872292709c6fbe\",\n                    \"channel\": \"mobile\"\n                },\n                {\n                    \"anonymousId\": \"8d872292709c6fbe\",\n                    \"channel\": \"mobile\"\n                }\n            ]\n        }\n    ],\n    \"libraries\": [\n        {\n            \"versionId\": \"1vIqcGyY4qHtrnPJGFwOFDMQ6Zk\"\n        },\n        {\n            \"versionId\": \"1vIomqeY6mWqDO297kDp6f0MsUh\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/transformations/libraries/test",
											"host": [
												"{{host}}"
											],
											"path": [
												"transformations",
												"libraries",
												"test"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "290"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Thu, 28 Oct 2021 08:11:34 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Request-ID",
											"value": "aa809ad0-37c6-11ec-a606-3f3e948688a5"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 b4e42639ad60593d21a1b035494041ed.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "HYD50-C3"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "CgaqkT1pXv_SRUcnqSrBHYoNbaTxfrjszTdbES4oscizPDgM9iN9Lg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"result\": {\n        \"successTestResults\": [\n            {\n                \"transformerVersionID\": \"1vIi5aGX27kXY60eNl5dixyNCET\",\n                \"result\": {\n                    \"success\": true,\n                    \"output\": {\n                        \"transformedEvents\": [\n                            {\n                                \"anonymousId\": \"8d872292709c6fbe\",\n                                \"channel\": \"mobile\"\n                            },\n                            {\n                                \"anonymousId\": \"8d872292709c6fbe\",\n                                \"channel\": \"mobile\"\n                            }\n                        ],\n                        \"logs\": []\n                    }\n                }\n            }\n        ],\n        \"failedTestResults\": []\n    }\n}"
								}
							]
						},
						{
							"name": "Publish a Transformation / Library",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transformations\": [\n        {\n            \"versionId\": \"1vIi5aGX27kXY60eNl5dixyNCET\",\n            \"testInput\": [\n                {\n                    \"anonymousId\": \"8d872292709c6fbe\",\n                    \"channel\": \"mobile\"\n                },\n                {\n                    \"anonymousId\": \"8d872292709c6fbe\",\n                    \"channel\": \"mobile\"\n                }\n            ]\n        }\n    ],\n    \"libraries\": [\n        {\n            \"versionId\": \"1vIqcGyY4qHtrnPJGFwOFDMQ6Zk\"\n        },\n        {\n            \"versionId\": \"1vIomqeY6mWqDO297kDp6f0MsUh\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/transformations/libraries/publish",
									"host": [
										"{{host}}"
									],
									"path": [
										"transformations",
										"libraries",
										"publish"
									]
								},
								"description": "This request publishes any transformation or library revisions.\n\n#### Body Parameters\n\n|**Parameter**|**Type**|**Presence**|**Description**|\n|-----|-----|-----|-----|\n|`versionId`|String|Required|The transformation `versionId` to be published.|\n|`testInput`|String|Optional|Array of JSON objects in a string format.|\n|`transformations`|Array|Optional|An array of objects with the property as `versionId` and `testInput`.|\n|`libraries`|Array|Optional|An array of objects with the property as the library `versionId`.|\n\n#### Note\n\nThis API lets you publish your transformation and library revisions. However, also note the following:\n\n* You can choose to publish a transformation revision without the libraries.\n* You can also choose to publish some library revisions without publishing the transformations.\n\n\n>**Note**: Whenever you call the `publish` API, we run tests in our server to ensure you don't save any transformation/library code that can lead to any exceptions. \n**In case your publish action fails, verify if the transformation code and the libraries it is referring to are correct.**\n---------"
							},
							"response": [
								{
									"name": "Publish a Transformation / Library",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"transformations\": [\n        {\n            \"versionId\": \"1vIi5aGX27kXY60eNl5dixyNCET\",\n            \"testInput\": [\n                {\n                    \"anonymousId\": \"8d872292709c6fbe\",\n                    \"channel\": \"mobile\"\n                },\n                {\n                    \"anonymousId\": \"8d872292709c6fbe\",\n                    \"channel\": \"mobile\"\n                }\n            ]\n        }\n    ],\n    \"libraries\": [\n        {\n            \"versionId\": \"1vIqcGyY4qHtrnPJGFwOFDMQ6Zk\"\n        },\n        {\n            \"versionId\": \"1vIomqeY6mWqDO297kDp6f0MsUh\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/transformations/libraries/publish",
											"host": [
												"{{host}}"
											],
											"path": [
												"transformations",
												"libraries",
												"publish"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "18"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Jul 2021 08:07:33 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 1579b726bc52f33c79b21bd7ae718044.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "DEL54-C1"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "C1RKDbgPRVpV3PIWei-R4n6155pQsvGdQFBwDIYFJIokJb7f1FcLMQ=="
										}
									],
									"cookie": [],
									"body": "{\n    \"published\": true\n}"
								}
							]
						}
					],
					"description": "As an end-user, you can create a transformation/library and perform several edits on it. **Note that  publishing is optional when you create a transformation or a library**.\n\nSuppose you perform several edits or revisions on a transformation. RudderStack always takes the latest update as the published version, creates a copy of the older versions, and saves them as revisions. Now suppose that you've created 7 to 8 such revisions of your transformation and now want to use the second revision for transforming your event traffic. You can do this by leveraging RudderStack's **Publish API**.\n\n#### Publish Payload\n\n|**Parameter**|**Type**|**Presence**|**Description**|\n|-----|-----|-----|-----|\n|`transformations`|Array|Optional (if `libraries` is present)|You can pass an array of multiple transformation `versionId` that you want to publish.|\n|`libraries`|Array|Optional (if `transformations` is present)|You can pass an array of multiple library `versionId` that you want to publish.|\n<br>\n\n>**Note**: Any one of `transformations` or `libraries` must be present in the payload to make a successful `publish` call.\n------",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"description": "**Transformations** is one of RudderStack's key features. It allows you to leverage custom JavaScript functions to transform your source event payload into a destination-specific format. \n\nRudderStack Transformations can be used across your Event Stream, Warehouse Actions, and Cloud Extract pipelines, allowing you to implement a variety of use-cases, like:\n\n- Filtering or sampling events.\n- Enriching events by implementing static logic or leveraging an external API.\n- Cleaning data by removing unnecessary bits.\n- Masking or removing sensitive PII information in the events to ensure data privacy.\n- Aggregating / rolling-up data at a micro-batch level.\n- Implementing external actions on the events by means of an API.\n<br>\n\n> Our [**Sample User Transformations**](https://github.com/rudderlabs/sample-user-transformers) GitHub repository contains some useful templates that you can use to create your own user transformations.\n____\n\nFor more information on this feature and how to use it, visit our [**docs**](https://rudderstack.com/docs/transformations/#adding-a-transformation).\n\n## What is the Transformations API?\nRudderStack's Transformations API allows you to create, read, update and delete transformations and libraries programmatically.\n\n## Authentication\n\nThe Transformations API is authenticated via Basic Authentication.\n\nYou can authenticate your account by including your email address as the username and the secret access token in the password field under the **Authorization** tab.\n\nAny API requests made without the authentication will fail.\n\n> **Important**: It is mandatory to generate your access token before you make any API calls. To generate the access token, refer to the **Access Token** section.\n----\n\nYou can also pass your access token in the authorization header directly, as shown:\n```\nAuthorization: Basic {Base64Encoded(<your_email_address>:<your_generated_access_token>)}\n```\n\nFor example, if your email address is `username@domain.com` and the generated access token is `1pHxUIA3jmxS2ip01zY696F80j7`, then the header will be:\n\n```\nBasic {Base64Encoded(username@domain.com:1pHxUIA3jmxS2ip01zY696F80j7)}\n```\n<br>\n\n> **Important**: To make success API requests, all the endpoints covered in this guide must include this header.\n----",
			"auth": {
				"type": "basic",
				"basic": [
					{
						"key": "password",
						"value": "{{token}}",
						"type": "string"
					},
					{
						"key": "username",
						"value": "{{email_address}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Tracking Plan API",
			"item": [
				{
					"name": "Tracking Plans",
					"item": [
						{
							"name": "Create Tracking Plan",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tracking_plan\": {\n        \"display_name\": \"Plan 1\",\n        \"rules\": {\n            \"events\": [\n                {\n                    \"name\": \"Order Viewed\",\n                    \"description\": \"Whose order viewed\",\n                    \"rules\": {\n                        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"context\": {},\n                            \"properties\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"product\": {\n                                        \"type\": [\n                                            \"string\"\n                                        ]\n                                    },\n                                    \"price\": {\n                                        \"type\": [\n                                            \"number\"\n                                        ]\n                                    },\n                                    \"amount\": {\n                                        \"type\": [\n                                            \"number\"\n                                        ]\n                                    }\n                                },\n                                \"required\": [\n                                    \"product\",\n                                    \"price\",\n                                    \"amount\"\n                                ]\n                            },\n                            \"traits\": {}\n                        }\n                    }\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{backend_url}}/{{trackingplan_base_path}}/trackingplans?overwriteEvents=true",
									"host": [
										"{{backend_url}}"
									],
									"path": [
										"{{trackingplan_base_path}}",
										"trackingplans"
									],
									"query": [
										{
											"key": "overwriteEvents",
											"value": "true"
										}
									]
								},
								"description": "Creates a tracking plan with the provided schema rules for `track` events.  \n  \n\n> You can create an empty tracking plan with no rules.\n\n* * *\n\n## Query Parameters:\n\n| **`overwriteEvents`** | **Description** |\n| --- | --- |\n| **`overwriteEvents=false`** | While creating a tracking plan, if an already-existing event in the workspace is present in request payload, RudderStack does not overwrite event and hence the request fails.  <br>  <br>By default, this is set to `false`. |\n| **`overwriteEvents=true`** | If RudderStack encounters an already-existing event in the workspace, it is updated. As a result, all the tracking plans connected to this event get updated. |\n\n**Example of** **`overwriteEvents=true`**\n\nSuppose a tracking plan **P1** is connected to an event **E1**. A new tracking plan **P2** is then created with **E1** as the payload. As a result, **E1** gets updated and its connected plan namely **P1** will have latest code of **E1**."
							},
							"response": [
								{
									"name": "Create Tracking Plan with overwriteEvents set to True",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tracking_plan\": {\n        \"display_name\": \"Plan 2\",\n        \"rules\": {\n            \"events\": [\n                {\n                    \"name\": \"Order Viewed\",\n                    \"description\": \"Whose order viewed\",\n                    \"rules\": {\n                        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"context\": {},\n                            \"properties\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"product\": {\n                                        \"type\": [\n                                            \"string\"\n                                        ]\n                                    },\n                                    \"price\": {\n                                        \"type\": [\n                                            \"number\"\n                                        ]\n                                    },\n                                    \"amount\": {\n                                        \"type\": [\n                                            \"number\"\n                                        ]\n                                    }\n                                },\n                                \"required\": [\n                                    \"product\",\n                                    \"price\",\n                                    \"amount\"\n                                ]\n                            },\n                            \"traits\": {}\n                        }\n                    }\n                }\n            ]\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.rudderstack.com/v1/dg/trackingplans?overwriteEvents=true",
											"protocol": "https",
											"host": [
												"api",
												"rudderstack",
												"com"
											],
											"path": [
												"v1",
												"dg",
												"trackingplans"
											],
											"query": [
												{
													"key": "overwriteEvents",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "12"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Jul 2021 07:56:04 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"tp_1vIOHzGFqqmqopsL0vX4Z7QoZuU\",\n    \"name\": \"workspaces/1tcUclryAlPoGR8ksIrH163EeHa/tracking-plans/tp_1vIOHzGFqqmqopsL0vX4Z7QoZuU\",\n    \"display_name\": \"Plan 2\",\n    \"version\": 1,\n    \"workspaceId\": \"1tcUclryAlPoGR8ksIrH163EeHa\"\n}"
								},
								{
									"name": "Create Tracking Plan",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tracking_plan\": {\n        \"display_name\": \"Plan 1\",\n        \"rules\": {\n            \"events\": [\n                {\n                    \"name\": \"Order Viewed\",\n                    \"description\": \"Whose order viewed\",\n                    \"rules\": {\n                        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"context\": {},\n                            \"properties\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"product\": {\n                                        \"type\": [\n                                            \"string\"\n                                        ]\n                                    },\n                                    \"price\": {\n                                        \"type\": [\n                                            \"number\"\n                                        ]\n                                    },\n                                    \"amount\": {\n                                        \"type\": [\n                                            \"number\"\n                                        ]\n                                    }\n                                },\n                                \"required\": [\n                                    \"product\",\n                                    \"price\",\n                                    \"amount\"\n                                ]\n                            },\n                            \"traits\": {}\n                        }\n                    }\n                }\n            ]\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.rudderstack.com/v1/dg/trackingplans",
											"protocol": "https",
											"host": [
												"api",
												"rudderstack",
												"com"
											],
											"path": [
												"v1",
												"dg",
												"trackingplans"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "111"
										},
										{
											"key": "Date",
											"value": "Mon, 14 Jun 2021 16:13:13 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"tp_1twjlAMEknGfmJ32U7TlvUosdE9\",\n    \"name\": \"workspaces/1tcUclryAlPoGR8ksIrH163EeHa/tracking-plans/tp_1twjlAMEknGfmJ32U7TlvUosdE9\",\n    \"display_name\": \"Plan 1\",\n    \"version\": 1,\n    \"workspaceId\": \"1tcUclryAlPoGR8ksIrH163EeHa\"\n}"
								}
							]
						},
						{
							"name": "Update Tracking Plan",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tracking_plan\": {\n        \"display_name\": \"Plan 1\",\n        \"rules\": {\n            \"events\": [\n                {\n                    \"name\": \"Order Viewed\",\n                    \"description\": \"Whose order viewed\",\n                    \"rules\": {\n                        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"context\": {},\n                            \"properties\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"product\": {\n                                        \"type\": [\n                                            \"string\"\n                                        ]\n                                    },\n                                    \"price\": {\n                                        \"type\": [\n                                            \"number\"\n                                        ]\n                                    }\n                                },\n                                \"required\": [\n                                    \"product\",\n                                    \"price\"\n                                ]\n                            },\n                            \"traits\": {}\n                        }\n                    }\n                },\n                {\n                    \"name\": \"Cart Viewed\",\n                    \"description\": \"What cart viewed\",\n                    \"rules\": {\n                        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"context\": {},\n                            \"properties\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"product\": {\n                                        \"type\": [\n                                            \"string\"\n                                        ]\n                                    },\n                                    \"price\": {\n                                        \"type\": [\n                                            \"number\"\n                                        ]\n                                    },\n                                    \"amount\": {\n                                        \"type\": [\n                                            \"number\"\n                                        ]\n                                    },\n                                    \"color\": {\n                                        \"type\": [\n                                            \"string\"\n                                        ]\n                                    }\n                                },\n                                \"required\": [\n                                    \"product\",\n                                    \"price\",\n                                    \"amount\"\n                                ]\n                            },\n                            \"traits\": {}\n                        }\n                    }\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{backend_url}}/{{trackingplan_base_path}}/trackingplans/tp_1twjlAMEknGfmJ32U7TlvUosdE9?overwriteEvents=true",
									"host": [
										"{{backend_url}}"
									],
									"path": [
										"{{trackingplan_base_path}}",
										"trackingplans",
										"tp_1twjlAMEknGfmJ32U7TlvUosdE9"
									],
									"query": [
										{
											"key": "overwriteEvents",
											"value": "true"
										}
									]
								},
								"description": "Updates the existing tracking plan with the provided schema rules for `track` events.\n\n**Note that this request supports only partial updates**. For example, suppose events **E1** and **E2** are connected to the tracking plan P1. If you pass only **E2** in the payload to update **E2**, this does not mean that **E1** will lose its connection to the plan **P1**.\n\n> This request **does not support** changing the name of the tracking plan.\n\n## Query Parameters:\n\n| **`overwriteEvents`** | **Description** |\n| --- | --- |\n| **`overwriteEvents=false`** | While creating a tracking plan, if an already-existing event in the workspace is present in request payload, RudderStack does not overwrite event and hence the request fails and you will get a response \"**Event** already exists. Duplicate event name not allowed.\"  <br>  <br>By default, this is set to `false`. |\n| **`overwriteEvents=true`** | If RudderStack encounters an already-existing event in the workspace, it is updated. As a result, all the tracking plans connected to this event get updated. |"
							},
							"response": [
								{
									"name": "Update Tracking Plan with overwriteEvents set to false",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tracking_plan\": {\n        \"display_name\": \"Plan 1\",\n        \"rules\": {\n            \"events\": [\n                {\n                    \"name\": \"Order Viewed\",\n                    \"description\": \"Whose order viewed\",\n                    \"rules\": {\n                        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"context\": {},\n                            \"properties\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"product\": {\n                                        \"type\": [\n                                            \"string\"\n                                        ]\n                                    },\n                                    \"price\": {\n                                        \"type\": [\n                                            \"number\"\n                                        ]\n                                    }\n                                },\n                                \"required\": [\n                                    \"product\",\n                                    \"price\"\n                                ]\n                            },\n                            \"traits\": {}\n                        }\n                    }\n                },\n                {\n                    \"name\": \"Cart Viewed\",\n                    \"description\": \"What cart viewed\",\n                    \"rules\": {\n                        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"context\": {},\n                            \"properties\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"product\": {\n                                        \"type\": [\n                                            \"string\"\n                                        ]\n                                    },\n                                    \"price\": {\n                                        \"type\": [\n                                            \"number\"\n                                        ]\n                                    },\n                                    \"amount\": {\n                                        \"type\": [\n                                            \"number\"\n                                        ]\n                                    },\n                                    \"color\": {\n                                        \"type\": [\n                                            \"string\"\n                                        ]\n                                    }\n                                },\n                                \"required\": [\n                                    \"product\",\n                                    \"price\",\n                                    \"amount\"\n                                ]\n                            },\n                            \"traits\": {}\n                        }\n                    }\n                }\n            ]\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backend_url}}/{{base_path}}/trackingplans/tp_1twjlAMEknGfmJ32U7TlvUosdE9?overwriteEvents=false",
											"host": [
												"{{backend_url}}"
											],
											"path": [
												"{{base_path}}",
												"trackingplans",
												"tp_1twjlAMEknGfmJ32U7TlvUosdE9"
											],
											"query": [
												{
													"key": "overwriteEvents",
													"value": "false"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "73"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Jul 2021 13:33:22 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Order Viewed already exists. Duplicate event name not allowed\"\n}"
								},
								{
									"name": "Update Tracking Plan overwriteEvents set to true",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tracking_plan\": {\n        \"display_name\": \"Plan 1\",\n        \"rules\": {\n            \"events\": [\n                {\n                    \"name\": \"Order Viewed\",\n                    \"description\": \"Whose order viewed\",\n                    \"rules\": {\n                        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"context\": {},\n                            \"properties\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"product\": {\n                                        \"type\": [\n                                            \"string\"\n                                        ]\n                                    },\n                                    \"price\": {\n                                        \"type\": [\n                                            \"number\"\n                                        ]\n                                    }\n                                },\n                                \"required\": [\n                                    \"product\",\n                                    \"price\"\n                                ]\n                            },\n                            \"traits\": {}\n                        }\n                    }\n                },\n                {\n                    \"name\": \"Cart Viewed\",\n                    \"description\": \"What cart viewed\",\n                    \"rules\": {\n                        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"context\": {},\n                            \"properties\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"product\": {\n                                        \"type\": [\n                                            \"string\"\n                                        ]\n                                    },\n                                    \"price\": {\n                                        \"type\": [\n                                            \"number\"\n                                        ]\n                                    },\n                                    \"amount\": {\n                                        \"type\": [\n                                            \"number\"\n                                        ]\n                                    },\n                                    \"color\": {\n                                        \"type\": [\n                                            \"string\"\n                                        ]\n                                    }\n                                },\n                                \"required\": [\n                                    \"product\",\n                                    \"price\",\n                                    \"amount\"\n                                ]\n                            },\n                            \"traits\": {}\n                        }\n                    }\n                }\n            ]\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backend_url}}/{{base_path}}/trackingplans/tp_1twjlAMEknGfmJ32U7TlvUosdE9?overwriteEvents=true",
											"host": [
												"{{backend_url}}"
											],
											"path": [
												"{{base_path}}",
												"trackingplans",
												"tp_1twjlAMEknGfmJ32U7TlvUosdE9"
											],
											"query": [
												{
													"key": "overwriteEvents",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "2289"
										},
										{
											"key": "Date",
											"value": "Tue, 13 Jul 2021 13:41:26 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"name\": \"workspaces/1tcUclryAlPoGR8ksIrH163EeHa/tracking-plans/tp_1twjlAMEknGfmJ32U7TlvUosdE9\",\n    \"display_name\": \"Tracking plan 1624855263445\",\n    \"version\": 12,\n    \"rules\": {\n        \"events\": [\n            {\n                \"id\": \"ev_1vG8AR1KcZUVyrVyCjFLDaDTDau\",\n                \"name\": \"Order Viewed\",\n                \"description\": \"Whose order viewed\",\n                \"version\": \"3-0-0\",\n                \"rules\": {\n                    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"context\": {},\n                        \"properties\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"product\": {\n                                    \"type\": [\n                                        \"string\"\n                                    ]\n                                },\n                                \"price\": {\n                                    \"type\": [\n                                        \"number\"\n                                    ]\n                                }\n                            },\n                            \"required\": [\n                                \"product\",\n                                \"price\"\n                            ]\n                        },\n                        \"traits\": {}\n                    }\n                }\n            },\n            {\n                \"id\": \"ev_1vGLsaiMsswxwRhwOhYDkJzUkVN\",\n                \"name\": \"Cart Viewed\",\n                \"description\": \"What cart viewed\",\n                \"version\": \"1-0-0\",\n                \"rules\": {\n                    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"context\": {},\n                        \"properties\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"product\": {\n                                    \"type\": [\n                                        \"string\"\n                                    ]\n                                },\n                                \"price\": {\n                                    \"type\": [\n                                        \"number\"\n                                    ]\n                                },\n                                \"amount\": {\n                                    \"type\": [\n                                        \"number\"\n                                    ]\n                                },\n                                \"color\": {\n                                    \"type\": [\n                                        \"string\"\n                                    ]\n                                }\n                            },\n                            \"required\": [\n                                \"product\",\n                                \"price\",\n                                \"amount\"\n                            ]\n                        },\n                        \"traits\": {}\n                    }\n                }\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Upsert Tracking Plan",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tracking_plan\": {\n        \"display_name\": \"Plan 2\",\n        \"rules\": {\n            \"events\": [\n                {\n                    \"name\": \"Order Viewed\",\n                    \"description\": \"Whose order viewed\",\n                    \"rules\": {\n                        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"context\": {},\n                            \"properties\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"product\": {\n                                        \"type\": [\n                                            \"string\"\n                                        ]\n                                    }\n                                },\n                                \"required\": [\n                                    \"product\"\n                                ]\n                            },\n                            \"traits\": {}\n                        }\n                    }\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{backend_url}}/{{trackingplan_base_path}}/trackingplans?overwriteEvents=true",
									"host": [
										"{{backend_url}}"
									],
									"path": [
										"{{trackingplan_base_path}}",
										"trackingplans"
									],
									"query": [
										{
											"key": "overwriteEvents",
											"value": "true"
										}
									]
								},
								"description": "Creates or updates a tracking plan with the provided schema rules.\n\n> Tracking plan `display_name` is a required field in the **Body** JSON.\n\n*   If a tracking plan by the given name already exists, this request updates the plan.\n*   If a tracking plan by the given name does not exist, this request creates a new plan.\n    \n\n## Query Parameters:\n\n| **`overwriteEvents`** | **Description** |\n| --- | --- |\n| **`overwriteEvents=false`** | While creating a tracking plan, if an already-existing event in the workspace is present in request payload, RudderStack does not overwrite event and hence the request fails.  <br>  <br>By default, `overwriteEvents` is set to `false`. |\n| **`overwriteEvents=true`** | If RudderStack encounters an already-existing event in the workspace, it is updated. As a result, all the tracking plans connected to this event get updated. |\n\n**Example of** **`overwriteEvents=true`**\n\nSuppose a tracking plan **P1** is connected to an event **E1**. A new tracking plan **P2** is then created with **E1** as the payload. As a result, **E1** gets updated and its connected plan namely **P1** will have latest code of **E1**."
							},
							"response": [
								{
									"name": "Upsert Tracking Plan: overwrite set to false",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic dGVzdDE2MjQ4NTUyNjM0NDVAcnVkZGVybGFicy5jb206MXVZdkpQS1JwU3pESUp3b2NDanhLMDlaSWU4",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tracking_plan\": {\n        \"display_name\": \"Plan 1\",\n        \"rules\": {\n            \"events\": [\n                {\n                    \"name\": \"Order Viewed\",\n                    \"description\": \"Whose order viewed\",\n                    \"rules\": {\n                        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"context\": {},\n                            \"properties\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"product\": {\n                                        \"type\": [\n                                            \"string\",\n                                            \"number\"\n                                        ]\n                                    }\n                                },\n                                \"required\": [\n                                    \"product\"\n                                ]\n                            },\n                            \"traits\": {}\n                        }\n                    }\n                },\n                {\n                    \"name\": \"Items Viewed\",\n                    \"description\": \"What items viewed\",\n                    \"rules\": {\n                        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"context\": {},\n                            \"properties\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"product\": {\n                                        \"type\": [\n                                            \"string\"\n                                        ]\n                                    },\n                                    \"price\": {\n                                        \"type\": [\n                                            \"number\"\n                                        ]\n                                    }\n                                },\n                                \"required\": [\n                                    \"product\",\n                                    \"price\"\n                                ]\n                            },\n                            \"traits\": {}\n                        }\n                    }\n                }\n            ]\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.rudderstack.com/v1/dg/trackingplans?overwriteEvents=false",
											"protocol": "https",
											"host": [
												"api",
												"rudderstack",
												"com"
											],
											"path": [
												"v1",
												"dg",
												"trackingplans"
											],
											"query": [
												{
													"key": "overwriteEvents",
													"value": "false"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "73"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Jul 2021 06:50:26 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Order Viewed already exists. Duplicate event name not allowed\"\n}"
								},
								{
									"name": "Upsert Tracking Plan",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tracking_plan\": {\n        \"display_name\": \"Plan 1\",\n        \"rules\": {\n            \"events\": [\n                {\n                    \"name\": \"Order Viewed\",\n                    \"description\": \"Whose order viewed\",\n                    \"rules\": {\n                        \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"context\": {},\n                            \"properties\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"product\": {\n                                        \"type\": [\n                                            \"string\",\n                                            \"number\"\n                                        ]\n                                    }\n                                },\n                                \"required\": [\n                                    \"product\"\n                                ]\n                            },\n                            \"traits\": {}\n                        }\n                    }\n                },\n                {\n                    \"name\": \"Items Viewed\",\n                    \"description\": \"What items viewed\",\n                    \"rules\": {\n                        \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"context\": {},\n                            \"properties\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"product\": {\n                                        \"type\": [\n                                            \"string\"\n                                        ]\n                                    },\n                                    \"price\": {\n                                        \"type\": [\n                                            \"number\"\n                                        ]\n                                    }\n                                },\n                                \"required\": [\n                                    \"product\",\n                                    \"price\"\n                                ]\n                            },\n                            \"traits\": {}\n                        }\n                    }\n                }\n            ]\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.rudderstack.com/v1/dg/trackingplans?overwriteEvents=true",
											"protocol": "https",
											"host": [
												"api",
												"rudderstack",
												"com"
											],
											"path": [
												"v1",
												"dg",
												"trackingplans"
											],
											"query": [
												{
													"key": "overwriteEvents",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "2656"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Jul 2021 06:53:55 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"name\": \"workspaces/1uYvJRE0aXPpZBhc4jaEltNM2aO/tracking-plans/tp_1uYvJmOo8q4WhrJYNTZ8AteqUmY\",\n    \"display_name\": \"Plan 1\",\n    \"version\": 13,\n    \"rules\": {\n        \"events\": [\n            {\n                \"id\": \"ev_1vGLsaiMsswxwRhwOhYDkJzUkVN\",\n                \"name\": \"Cart Viewed\",\n                \"description\": \"What cart viewed\",\n                \"version\": \"1-0-0\",\n                \"rules\": {\n                    \"type\": \"object\",\n                    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                    \"properties\": {\n                        \"traits\": {},\n                        \"context\": {},\n                        \"properties\": {\n                            \"type\": \"object\",\n                            \"required\": [\n                                \"product\",\n                                \"price\",\n                                \"amount\"\n                            ],\n                            \"properties\": {\n                                \"color\": {\n                                    \"type\": [\n                                        \"string\"\n                                    ]\n                                },\n                                \"price\": {\n                                    \"type\": [\n                                        \"number\"\n                                    ]\n                                },\n                                \"amount\": {\n                                    \"type\": [\n                                        \"number\"\n                                    ]\n                                },\n                                \"product\": {\n                                    \"type\": [\n                                        \"string\"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            {\n                \"id\": \"ev_1vG8AR1KcZUVyrVyCjFLDaDTDau\",\n                \"name\": \"Order Viewed\",\n                \"description\": \"Whose order viewed\",\n                \"version\": \"5-0-0\",\n                \"rules\": {\n                    \"type\": \"object\",\n                    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                    \"properties\": {\n                        \"traits\": {},\n                        \"context\": {},\n                        \"properties\": {\n                            \"type\": \"object\",\n                            \"required\": [\n                                \"product\",\n                                \"price\"\n                            ],\n                            \"properties\": {\n                                \"price\": {\n                                    \"type\": [\n                                        \"number\"\n                                    ]\n                                },\n                                \"product\": {\n                                    \"type\": [\n                                        \"string\"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            {\n                \"id\": \"ev_1vINRejosp7AuBnlq4qwoHSWNzZ\",\n                \"name\": \"Items Viewed\",\n                \"description\": \"What items viewed\",\n                \"version\": \"1-0-0\",\n                \"rules\": {\n                    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"context\": {},\n                        \"properties\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"product\": {\n                                    \"type\": [\n                                        \"string\"\n                                    ]\n                                },\n                                \"price\": {\n                                    \"type\": [\n                                        \"number\"\n                                    ]\n                                }\n                            },\n                            \"required\": [\n                                \"product\",\n                                \"price\"\n                            ]\n                        },\n                        \"traits\": {}\n                    }\n                }\n            }\n        ]\n    }\n}"
								},
								{
									"name": "Upsert Tracking Plan: create tracking plan (given new name) overwriteEvents set to true",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"tracking_plan\": {\n        \"display_name\": \"Plan 2\",\n        \"rules\": {\n            \"events\": [\n                {\n                    \"name\": \"Order Viewed\",\n                    \"description\": \"Whose order viewed\",\n                    \"rules\": {\n                        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"context\": {},\n                            \"properties\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"product\": {\n                                        \"type\": [\n                                            \"string\"\n                                        ]\n                                    }\n                                },\n                                \"required\": [\n                                    \"product\"\n                                ]\n                            },\n                            \"traits\": {}\n                        }\n                    }\n                }\n            ]\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.rudderstack.com/v1/dg/trackingplans?overwriteEvents=true",
											"protocol": "https",
											"host": [
												"api",
												"rudderstack",
												"com"
											],
											"path": [
												"v1",
												"dg",
												"trackingplans"
											],
											"query": [
												{
													"key": "overwriteEvents",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1010"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Jul 2021 07:00:53 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"name\": \"workspaces/1tcUclryAlPoGR8ksIrH163EeHa/tracking-plans/tp_1vIOHzGFqqmqopsL0vX4Z7QoZuU\",\n    \"display_name\": \"Plan 2\",\n    \"version\": 1,\n    \"rules\": {\n        \"events\": [\n            {\n                \"id\": \"ev_1vG8AR1KcZUVyrVyCjFLDaDTDau\",\n                \"name\": \"Order Viewed\",\n                \"description\": \"Whose order viewed\",\n                \"version\": \"7-0-0\",\n                \"rules\": {\n                    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"context\": {},\n                        \"properties\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"product\": {\n                                    \"type\": [\n                                        \"string\"\n                                    ]\n                                }\n                            },\n                            \"required\": [\n                                \"product\"\n                            ]\n                        },\n                        \"traits\": {}\n                    }\n                }\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "Get Tracking Plan by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{backend_url}}/{{trackingplan_base_path}}/trackingplans/tp_1twjlAMEknGfmJ32U7TlvUosdE9?version=1",
									"host": [
										"{{backend_url}}"
									],
									"path": [
										"{{trackingplan_base_path}}",
										"trackingplans",
										"tp_1twjlAMEknGfmJ32U7TlvUosdE9"
									],
									"query": [
										{
											"key": "version",
											"value": "1"
										}
									]
								},
								"description": "Fetches the tracking plan by its ID, linked events, as well as the `track` schemas.\n\n> You can also get the previous tracking plan versions with an optional query parameter `version` .\n\n* * *"
							},
							"response": [
								{
									"name": "Get the Tracking Plan by ID",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.rudderstack.com/v1/dg/trackingplans/tp_1twjlAMEknGfmJ32U7TlvUosdE9",
											"protocol": "https",
											"host": [
												"api",
												"rudderstack",
												"com"
											],
											"path": [
												"v1",
												"dg",
												"trackingplans",
												"tp_1twjlAMEknGfmJ32U7TlvUosdE9"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1166"
										},
										{
											"key": "Date",
											"value": "Mon, 14 Jun 2021 16:16:47 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"name\": \"workspaces/1tcUclryAlPoGR8ksIrH163EeHa/tracking-plans/tp_1twjlAMEknGfmJ32U7TlvUosdE9\",\n    \"display_name\": \"Plan 1\",\n    \"version\": 1,\n    \"rules\": {\n        \"events\": [\n            {\n                \"id\": \"ev_1twjlAeyZLr0B0fFvHI7NIqKX32\",\n                \"name\": \"Order Viewed\",\n                \"description\": \"Whose order viewed\",\n                \"version\": \"1-0-0\",\n                \"rules\": {\n                    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"context\": {},\n                        \"properties\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"product\": {\n                                    \"type\": [\n                                        \"string\"\n                                    ]\n                                },\n                                \"price\": {\n                                    \"type\": [\n                                        \"number\"\n                                    ]\n                                },\n                                \"amount\": {\n                                    \"type\": [\n                                        \"number\"\n                                    ]\n                                }\n                            },\n                            \"required\": [\n                                \"product\",\n                                \"price\",\n                                \"amount\"\n                            ]\n                        },\n                        \"traits\": {}\n                    }\n                }\n            }\n        ]\n    },\n    \"create_time\": \"2021-06-14T16:13:13.648Z\",\n    \"update_time\": \"2021-06-14T16:13:13.648Z\"\n}"
								}
							]
						},
						{
							"name": "Get All Tracking Plans",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{backend_url}}/{{trackingplan_base_path}}/trackingplans",
									"host": [
										"{{backend_url}}"
									],
									"path": [
										"{{trackingplan_base_path}}",
										"trackingplans"
									]
								},
								"description": "Fetches all the tracking plans present in the authenticated user's workspace.\n\n* * *"
							},
							"response": [
								{
									"name": "Tracking Plan List",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.rudderstack.com/v1/dg/trackingplans",
											"protocol": "https",
											"host": [
												"api",
												"rudderstack",
												"com"
											],
											"path": [
												"v1",
												"dg",
												"trackingplans"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1938"
										},
										{
											"key": "Date",
											"value": "Mon, 14 Jun 2021 16:18:30 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"tracking_plans\": [\n        {\n            \"name\": \"workspaces/1tcUclryAlPoGR8ksIrH163EeHa/tracking-plans/tp_1twjlAMEknGfmJ32U7TlvUosdE9\",\n            \"display_name\": \"Plan 1\",\n            \"version\": 1,\n            \"rules\": {\n                \"events\": [\n                    {\n                        \"id\": \"ev_1twjlAeyZLr0B0fFvHI7NIqKX32\",\n                        \"name\": \"Order Viewed\",\n                        \"description\": \"Whose order viewed\",\n                        \"version\": \"1-0-0\",\n                        \"rules\": {\n                            \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"context\": {},\n                                \"properties\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"product\": {\n                                            \"type\": [\n                                                \"string\"\n                                            ]\n                                        },\n                                        \"price\": {\n                                            \"type\": [\n                                                \"number\"\n                                            ]\n                                        },\n                                        \"amount\": {\n                                            \"type\": [\n                                                \"number\"\n                                            ]\n                                        }\n                                    },\n                                    \"required\": [\n                                        \"product\",\n                                        \"price\",\n                                        \"amount\"\n                                    ]\n                                },\n                                \"traits\": {}\n                            }\n                        }\n                    }\n                ]\n            },\n            \"create_time\": \"2021-06-14T16:13:13.648Z\",\n            \"update_time\": \"2021-06-14T16:13:13.648Z\"\n        }\n    ]\n}"
								}
							]
						}
					],
					"description": "Tracking Plans let you proactively monitor and act on any non-compliant event data coming into your RudderStack sources based on predefined plans. This can help you prevent or de-risk situations where missing or improperly configured event data can break your downstream destinations.\n\n  \n\n> Tracking plans let you define specific event names and properties for your `track` calls.\n\nFor more information on the Tracking Plans feature, refer to the [**Tracking Plans**](https://www.rudderstack.com/docs/data-governance/tracking-plans/) documentation."
				},
				{
					"name": "Tracking Plan Rules",
					"item": [
						{
							"name": "Events",
							"item": [
								{
									"name": "Create Events in the User Workspace",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"name\": \"New Event 1\",\n        \"description\": \"New event\",\n        \"rules\": {\n            \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n            \"type\": \"object\",\n            \"properties\": {\n                \"context\": {},\n                \"properties\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"product\": {\n                            \"type\": [\n                                \"string\"\n                            ]\n                        },\n                        \"price\": {\n                            \"type\": [\n                                \"number\"\n                            ]\n                        }\n                    },\n                    \"required\": [\n                        \"product\",\n                        \"price\"\n                    ]\n                },\n                \"traits\": {}\n            }\n        }\n    },\n    {\n        \"name\": \"New Event 2\",\n        \"description\": \"New event\",\n        \"rules\": {\n            \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n            \"type\": \"object\",\n            \"properties\": {\n                \"context\": {},\n                \"properties\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"product\": {\n                            \"type\": [\n                                \"string\"\n                            ]\n                        },\n                        \"amount\": {\n                            \"type\": [\n                                \"number\"\n                            ]\n                        }\n                    },\n                    \"required\": [\n                        \"product\",\n                        \"amount\"\n                    ]\n                },\n                \"traits\": {}\n            }\n        }\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backend_url}}/{{trackingplan_base_path}}/events",
											"host": [
												"{{backend_url}}"
											],
											"path": [
												"{{trackingplan_base_path}}",
												"events"
											]
										},
										"description": "Creates new events in the authenticated user's workspace.\n\nA few things to note:\n\n*   The event name should be unique per user workspace\n*   You cannot update the event name.\n    \n\n* * *"
									},
									"response": [
										{
											"name": "Create Events",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n    {\n        \"name\": \"New Event 1\",\n        \"description\": \"New event\",\n        \"rules\": {\n            \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n            \"type\": \"object\",\n            \"properties\": {\n                \"context\": {},\n                \"properties\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"product\": {\n                            \"type\": [\n                                \"string\"\n                            ]\n                        },\n                        \"price\": {\n                            \"type\": [\n                                \"number\"\n                            ]\n                        }\n                    },\n                    \"required\": [\n                        \"product\",\n                        \"price\"\n                    ]\n                },\n                \"traits\": {}\n            }\n        }\n    },\n    {\n        \"name\": \"New Event 2\",\n        \"description\": \"New event\",\n        \"rules\": {\n            \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n            \"type\": \"object\",\n            \"properties\": {\n                \"context\": {},\n                \"properties\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"product\": {\n                            \"type\": [\n                                \"string\"\n                            ]\n                        },\n                        \"amount\": {\n                            \"type\": [\n                                \"number\"\n                            ]\n                        }\n                    },\n                    \"required\": [\n                        \"product\",\n                        \"amount\"\n                    ]\n                },\n                \"traits\": {}\n            }\n        }\n    }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.rudderstack.com/v1/dg/events",
													"protocol": "https",
													"host": [
														"api",
														"rudderstack",
														"com"
													],
													"path": [
														"v1",
														"dg",
														"events"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "16"
												},
												{
													"key": "Date",
													"value": "Mon, 14 Jun 2021 16:31:27 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"success\": true\n}"
										}
									]
								},
								{
									"name": "Get Events",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backend_url}}/{{trackingplan_base_path}}/events",
											"host": [
												"{{backend_url}}"
											],
											"path": [
												"{{trackingplan_base_path}}",
												"events"
											]
										},
										"description": "Fetches all the events present in the authenticated user's workspace **irrespective** of whether they are linked to a tracking plan.\n\n> Note that the event ID and version are autogenerated.\n\n* * *"
									},
									"response": [
										{
											"name": "Get Events",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://api.rudderstack.com/v1/dg/events",
													"protocol": "https",
													"host": [
														"api",
														"rudderstack",
														"com"
													],
													"path": [
														"v1",
														"dg",
														"events"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "1133"
												},
												{
													"key": "Date",
													"value": "Mon, 14 Jun 2021 16:32:16 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"events\": [\n        {\n            \"id\": \"ev_1twjlAeyZLr0B0fFvHI7NIqKX32\",\n            \"name\": \"Order Viewed\",\n            \"description\": \"Whose order viewed\",\n            \"version\": \"1-0-0\",\n            \"rules\": {\n                \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"context\": {},\n                    \"properties\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"product\": {\n                                \"type\": [\n                                    \"string\"\n                                ]\n                            },\n                            \"price\": {\n                                \"type\": [\n                                    \"number\"\n                                ]\n                            },\n                            \"amount\": {\n                                \"type\": [\n                                    \"number\"\n                                ]\n                            }\n                        },\n                        \"required\": [\n                            \"product\",\n                            \"price\",\n                            \"amount\"\n                        ]\n                    },\n                    \"traits\": {}\n                }\n            }\n        },\n        {\n            \"id\": \"ev_1twlyewLH4dov4WRl5dAx4gPIRi\",\n            \"name\": \"New Event 1\",\n            \"description\": \"New event\",\n            \"version\": \"1-0-0\",\n            \"rules\": {\n                \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"context\": {},\n                    \"properties\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"product\": {\n                                \"type\": [\n                                    \"string\"\n                                ]\n                            },\n                            \"price\": {\n                                \"type\": [\n                                    \"number\"\n                                ]\n                            }\n                        },\n                        \"required\": [\n                            \"product\",\n                            \"price\"\n                        ]\n                    },\n                    \"traits\": {}\n                }\n            }\n        },\n        {\n            \"id\": \"ev_1twlyaUTYvZJ6CqIuSr7axGlpnz\",\n            \"name\": \"New Event 2\",\n            \"description\": \"New event\",\n            \"version\": \"1-0-0\",\n            \"rules\": {\n                \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"context\": {},\n                    \"properties\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"product\": {\n                                \"type\": [\n                                    \"string\"\n                                ]\n                            },\n                            \"amount\": {\n                                \"type\": [\n                                    \"number\"\n                                ]\n                            }\n                        },\n                        \"required\": [\n                            \"product\",\n                            \"amount\"\n                        ]\n                    },\n                    \"traits\": {}\n                }\n            }\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "Update Event by ID",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"Order Viewed - updated\",\n    \"rules\": {\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n        \"type\": \"object\",\n        \"properties\": {\n            \"context\": {},\n            \"properties\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"product\": {\n                        \"type\": [\n                            \"string\"\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"product\"\n                ]\n            },\n            \"traits\": {}\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backend_url}}/{{trackingplan_base_path}}/events/:eventId",
											"host": [
												"{{backend_url}}"
											],
											"path": [
												"{{trackingplan_base_path}}",
												"events",
												":eventId"
											],
											"variable": [
												{
													"key": "eventId",
													"value": "ev_1twjlAeyZLr0B0fFvHI7NIqKX32"
												}
											]
										},
										"description": "Updates the existing event and the corresponding tracking plans linked to that event.\n\n> An update to the event description does not update the version of the linked tracking plans.\n\n* * *"
									},
									"response": [
										{
											"name": "Update Event by ID",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"Order Viewed - updated\",\n    \"rules\": {\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n        \"type\": \"object\",\n        \"properties\": {\n            \"context\": {},\n            \"properties\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"product\": {\n                        \"type\": [\n                            \"string\"\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"product\"\n                ]\n            },\n            \"traits\": {}\n        }\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.rudderstack.com/v1/dg/events/:eventId",
													"protocol": "https",
													"host": [
														"api",
														"rudderstack",
														"com"
													],
													"path": [
														"v1",
														"dg",
														"events",
														":eventId"
													],
													"variable": [
														{
															"key": "eventId",
															"value": "ev_1twjlAeyZLr0B0fFvHI7NIqKX32"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "16"
												},
												{
													"key": "Date",
													"value": "Mon, 14 Jun 2021 16:36:30 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"success\": true\n}"
										}
									]
								},
								{
									"name": "Link Events  to a Tracking Plan",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\"ev_1twlyewLH4dov4WRl5dAx4gPIRi\", \"ev_1twlyaUTYvZJ6CqIuSr7axGlpnz\"]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backend_url}}/{{trackingplan_base_path}}/trackingplans/:id/events/link",
											"host": [
												"{{backend_url}}"
											],
											"path": [
												"{{trackingplan_base_path}}",
												"trackingplans",
												":id",
												"events",
												"link"
											],
											"variable": [
												{
													"key": "id",
													"value": "tp_1twjlAMEknGfmJ32U7TlvUosdE9"
												}
											]
										},
										"description": "Link the events to a given tracking plan.\n\n> Note that the tracking plan ID is specified in the request and the event IDs are passed in the request body."
									},
									"response": [
										{
											"name": "Link Events",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\"ev_1twlyewLH4dov4WRl5dAx4gPIRi\", \"ev_1twlyaUTYvZJ6CqIuSr7axGlpnz\"]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.rudderstack.com/v1/dg/trackingplans/:id/events/link",
													"protocol": "https",
													"host": [
														"api",
														"rudderstack",
														"com"
													],
													"path": [
														"v1",
														"dg",
														"trackingplans",
														":id",
														"events",
														"link"
													],
													"variable": [
														{
															"key": "id",
															"value": "tp_1twjlAMEknGfmJ32U7TlvUosdE9"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "16"
												},
												{
													"key": "Date",
													"value": "Mon, 14 Jun 2021 16:39:42 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"success\": true\n}"
										}
									]
								},
								{
									"name": "Unlink Events from a Tracking Plan",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "[\"ev_1twjlAeyZLr0B0fFvHI7NIqKX32\"]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{backend_url}}/{{trackingplan_base_path}}/trackingplans/:id/events/unlink",
											"host": [
												"{{backend_url}}"
											],
											"path": [
												"{{trackingplan_base_path}}",
												"trackingplans",
												":id",
												"events",
												"unlink"
											],
											"variable": [
												{
													"key": "id",
													"value": "tp_1twjlAMEknGfmJ32U7TlvUosdE9"
												}
											]
										},
										"description": "Unlinks the events (specified by their IDs) from a given tracking plan."
									},
									"response": [
										{
											"name": "Unlink Events",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\"ev_1twjlAeyZLr0B0fFvHI7NIqKX32\"]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://api.rudderstack.com/v1/dg/trackingplans/:id/events/unlink",
													"protocol": "https",
													"host": [
														"api",
														"rudderstack",
														"com"
													],
													"path": [
														"v1",
														"dg",
														"trackingplans",
														":id",
														"events",
														"unlink"
													],
													"variable": [
														{
															"key": "id",
															"value": "tp_1twjlAMEknGfmJ32U7TlvUosdE9"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "16"
												},
												{
													"key": "Date",
													"value": "Mon, 14 Jun 2021 16:41:27 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"success\": true\n}"
										}
									]
								},
								{
									"name": "Get All Events Linked to a Tracking Plan (Including Deleted and Active Events)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{backend_url}}/{{trackingplan_base_path}}/trackingplans/:id/events/all",
											"host": [
												"{{backend_url}}"
											],
											"path": [
												"{{trackingplan_base_path}}",
												"trackingplans",
												":id",
												"events",
												"all"
											],
											"variable": [
												{
													"key": "id",
													"value": "tp_1tWOb6feqfmawbmKuAAdGHtI6GN"
												}
											]
										},
										"description": "Fetches all the events linked to the given tracking plan, including both deleted and active events.\n\n> The deleted events are referred to as unlinked events.\n\n* * *"
									},
									"response": [
										{
											"name": "All events",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{backend_url}}/{{base_path}}/trackingplans/:id/events/all",
													"host": [
														"{{backend_url}}"
													],
													"path": [
														"{{base_path}}",
														"trackingplans",
														":id",
														"events",
														"all"
													],
													"variable": [
														{
															"key": "id",
															"value": "tp_1twjlAMEknGfmJ32U7TlvUosdE9"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Vary",
													"value": "Origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "1179"
												},
												{
													"key": "Date",
													"value": "Mon, 14 Jun 2021 16:42:31 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": \"tp_1twjlAMEknGfmJ32U7TlvUosdE9\",\n    \"name\": \"Plan 1\",\n    \"version\": 8,\n    \"events\": [\n        {\n            \"id\": \"ev_1twlyewLH4dov4WRl5dAx4gPIRi\",\n            \"name\": \"New Event 1\",\n            \"description\": \"New event\",\n            \"version\": \"1-0-0\",\n            \"deleted\": false,\n            \"rules\": {\n                \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"context\": {},\n                    \"properties\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"product\": {\n                                \"type\": [\n                                    \"string\"\n                                ]\n                            },\n                            \"price\": {\n                                \"type\": [\n                                    \"number\"\n                                ]\n                            }\n                        },\n                        \"required\": [\n                            \"product\",\n                            \"price\"\n                        ]\n                    },\n                    \"traits\": {}\n                }\n            }\n        },\n        {\n            \"id\": \"ev_1twlyaUTYvZJ6CqIuSr7axGlpnz\",\n            \"name\": \"New Event 2\",\n            \"description\": \"New event\",\n            \"version\": \"1-0-0\",\n            \"deleted\": false,\n            \"rules\": {\n                \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"context\": {},\n                    \"properties\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"product\": {\n                                \"type\": [\n                                    \"string\"\n                                ]\n                            },\n                            \"amount\": {\n                                \"type\": [\n                                    \"number\"\n                                ]\n                            }\n                        },\n                        \"required\": [\n                            \"product\",\n                            \"amount\"\n                        ]\n                    },\n                    \"traits\": {}\n                }\n            }\n        },\n        {\n            \"id\": \"ev_1twjlAeyZLr0B0fFvHI7NIqKX32\",\n            \"name\": \"Order Viewed\",\n            \"description\": \"Order Viewed - updated\",\n            \"version\": \"2-0-0\",\n            \"deleted\": true,\n            \"rules\": {\n                \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"context\": {},\n                    \"properties\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"product\": {\n                                \"type\": [\n                                    \"string\"\n                                ]\n                            }\n                        },\n                        \"required\": [\n                            \"product\"\n                        ]\n                    },\n                    \"traits\": {}\n                }\n            }\n        }\n    ]\n}"
										}
									]
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Source Tracking Plan Connections",
					"item": [
						{
							"name": "Create/Update Source Configuration",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"track\": {\n        \"allowUnplannedEvents\": \"true\",\n        \"unplannedProperties\": \"forward\",\n        \"anyOtherViolation\": \"forward\",\n        \"propagateValidationErrors\": \"true\"\n    },\n    \"global\": {\n        \"allowUnplannedEvents\": \"true\",\n        \"unplannedProperties\": \"forward\",\n        \"anyOtherViolation\": \"forward\",\n        \"propagateValidationErrors\": \"true\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{backend_url}}/{{trackingplan_base_path}}/sources/:sourceId/config",
									"host": [
										"{{backend_url}}"
									],
									"path": [
										"{{trackingplan_base_path}}",
										"sources",
										":sourceId",
										"config"
									],
									"variable": [
										{
											"key": "sourceId",
											"value": "{{source_id}}"
										}
									]
								},
								"description": "Creates or updates the tracking plan configuration for a given source ID.\n\nThe configuration settings are listed in the following sections:\n\n| **Configuration setting** | **Description** |\n| --- | --- |\n| `allowUnplannedEvents` | If set to `\"true\"`, RudderStack will not drop the events that are not defined in your tracking plan.  <br>  <br>If set to `\"false\"`, RudderStack will drop the events not defined in your tracking plan. |\n| `unplannedProperties` | If set to `\"forward\"`, the event's context will be updated with the erroneous/unplanned property and forwarded to RudderStack.  <br>  <br>If set to `\"drop\"` , RudderStack will drop the event containing the unplanned properties. |\n| `anyOtherViolation` | If set to `\"forward\"`, the event's context will be updated with these violations and forwarded to RudderStack.  <br>  <br>If set to `\"drop\"` , RudderStack will drop the event containing the violations. |\n| `propagateValidationErrors` | If set to `\"true\"`, the validation errors are captured in the event's context and sent downstream (user transformations, destinations).  <br>  <br>If set to `\"false\"`, RudderStack will drop the event containing the validation errors. |\n\nThe `global` parameter indicates the configuration settings applicable for **all** events.\n\n**However, note that the event-level configuration settings will override the settings defined in the** **`global`** **parameter.** In the example request on the right, the settings defined for `track` will override the settings defined for `global`."
							},
							"response": [
								{
									"name": "Create source configuration",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"track\": {\n        \"allowUnplannedEvents\": \"true\",\n        \"unplannedProperties\": \"forward\",\n        \"anyOtherViolation\": \"forward\",\n        \"propagateValidationErrors\": \"true\"\n    },\n    \"global\": {\n        \"allowUnplannedEvents\": \"true\",\n        \"unplannedProperties\": \"forward\",\n        \"anyOtherViolation\": \"forward\",\n        \"propagateValidationErrors\": \"true\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.rudderstack.com/v1/dg/sources/:sourceId/config",
											"protocol": "https",
											"host": [
												"api",
												"rudderstack",
												"com"
											],
											"path": [
												"v1",
												"dg",
												"sources",
												":sourceId",
												"config"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "1qSuNc0KtpNOuesADEHAnRzihZq"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "508"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Wed, 10 Nov 2021 12:49:10 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Request-ID",
											"value": "99970570-4224-11ec-87ae-191b21e4b239"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 62f7aa308c367fb8f14fc57f199056cc.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "BLR50-C3"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "-SRuV-qNGrujlHkc-OGsgEnp7TH0ERklSn1BA3m21pTCo5rj3veVPg=="
										}
									],
									"cookie": [],
									"body": "{\n    \"config\": {\n        \"track\": {\n            \"allowUnplannedEvents\": \"true\",\n            \"unplannedProperties\": \"forward\",\n            \"anyOtherViolation\": \"forward\",\n            \"propagateValidationErrors\": \"true\"\n        },\n        \"global\": {\n            \"allowUnplannedEvents\": \"true\",\n            \"unplannedProperties\": \"forward\",\n            \"anyOtherViolation\": \"forward\",\n            \"propagateValidationErrors\": \"true\"\n        }\n    },\n    \"sourceId\": \"1qSuNc0KtpNOuesADEHAnRzihZq\",\n    \"version\": 1,\n    \"createdAt\": \"2021-11-10T12:49:10.482Z\",\n    \"updatedAt\": \"2021-11-10T12:49:10.482Z\"\n}"
								}
							]
						},
						{
							"name": "Get Source Configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{backend_url}}/{{trackingplan_base_path}}/sources/:sourceId/config",
									"host": [
										"{{backend_url}}"
									],
									"path": [
										"{{trackingplan_base_path}}",
										"sources",
										":sourceId",
										"config"
									],
									"query": [
										{
											"key": "version",
											"value": "1",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "sourceId",
											"value": "{{source_id}}"
										}
									]
								},
								"description": "Fetches the tracking plan configuration for a given source ID.\n\n  \n\n> You can get the previous tracking plan configuration versions with an optional query parameter `version`.\n\n* * *"
							},
							"response": [
								{
									"name": "Get source configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.rudderstack.com/v1/dg/sources/:sourceId/config",
											"protocol": "https",
											"host": [
												"api",
												"rudderstack",
												"com"
											],
											"path": [
												"v1",
												"dg",
												"sources",
												":sourceId",
												"config"
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "1qSuNc0KtpNOuesADEHAnRzihZq"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "366"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Wed, 10 Nov 2021 12:52:50 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Request-ID",
											"value": "1c73d860-4225-11ec-a744-5d63e9e5bfd5"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 62f7aa308c367fb8f14fc57f199056cc.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "BLR50-C3"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "_MPjb_MobxcZf-iFPqAxmEl-8tk9RiCqGUasbmgyIw3a3qI5KNQDTw=="
										}
									],
									"cookie": [],
									"body": "{\n    \"track\": {\n        \"allowUnplannedEvents\": \"true\",\n        \"unplannedProperties\": \"forward\",\n        \"anyOtherViolation\": \"forward\",\n        \"propagateValidationErrors\": \"true\"\n    },\n    \"global\": {\n        \"allowUnplannedEvents\": \"true\",\n        \"unplannedProperties\": \"forward\",\n        \"anyOtherViolation\": \"forward\",\n        \"propagateValidationErrors\": \"true\"\n    }\n}"
								},
								{
									"name": "Get source configuration with version",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://api.rudderstack.com/v1/dg/sources/:sourceId/config?version=1",
											"protocol": "https",
											"host": [
												"api",
												"rudderstack",
												"com"
											],
											"path": [
												"v1",
												"dg",
												"sources",
												":sourceId",
												"config"
											],
											"query": [
												{
													"key": "version",
													"value": "1"
												}
											],
											"variable": [
												{
													"key": "sourceId",
													"value": "1qSuNc0KtpNOuesADEHAnRzihZq"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "366"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Wed, 10 Nov 2021 12:51:31 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Request-ID",
											"value": "ed7a64c0-4224-11ec-a05d-0bddbc77abc0"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 62f7aa308c367fb8f14fc57f199056cc.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "BLR50-C3"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "ADBo5Y7m7oOOC-Ctn0Q8NLdtRMnXRyqKaT3t-CeuK6RBsDmMNoXCCw=="
										}
									],
									"cookie": [],
									"body": "{\n    \"track\": {\n        \"allowUnplannedEvents\": \"true\",\n        \"unplannedProperties\": \"forward\",\n        \"anyOtherViolation\": \"forward\",\n        \"propagateValidationErrors\": \"true\"\n    },\n    \"global\": {\n        \"allowUnplannedEvents\": \"true\",\n        \"unplannedProperties\": \"forward\",\n        \"anyOtherViolation\": \"forward\",\n        \"propagateValidationErrors\": \"true\"\n    }\n}"
								}
							]
						},
						{
							"name": "Create Tracking Plan-Source Connection",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"source_id\": \"{{source_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{backend_url}}/{{trackingplan_base_path}}/trackingplans/:id/source-connections",
									"host": [
										"{{backend_url}}"
									],
									"path": [
										"{{trackingplan_base_path}}",
										"trackingplans",
										":id",
										"source-connections"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{tracking_plan_id}}"
										}
									]
								},
								"description": "Connects a tracking plan to source. Note that this request supports create or update operations for only one tracking plan connection at a time.\n\n> If source is already linked to plan, this request overrides existing tracking plan connection."
							},
							"response": [
								{
									"name": "Create Connection",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"source_id\": \"1qSuNc0KtpNOuesADEHAnRzihZq\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.rudderstack.com/v1/dg/trackingplans/:id/source-connections",
											"protocol": "https",
											"host": [
												"api",
												"rudderstack",
												"com"
											],
											"path": [
												"v1",
												"dg",
												"trackingplans",
												":id",
												"source-connections"
											],
											"variable": [
												{
													"key": "id",
													"value": "tp_1ySO5mS8gK3gvyC88YiJJVj7hr3"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "141"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Wed, 10 Nov 2021 13:02:21 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Request-ID",
											"value": "70cbd600-4226-11ec-87ae-191b21e4b239"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 c94da9cdc6b5a8cdec5c3956d92170f5.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "BLR50-C3"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "Ufp35NM6XYBDS6ZxpFWaIUi0rpM73wV2Hhd8lHQ_TWkPIC-LnxhlXw=="
										}
									],
									"cookie": [],
									"body": "{\n    \"source_name\": \"workspaces/1n6JajCyRa12om0GB1FxGEodIf8/sources/1qSuNc0KtpNOuesADEHAnRzihZq\",\n    \"tracking_plan\": \"tp_1ySO5mS8gK3gvyC88YiJJVj7hr3\"\n}"
								}
							]
						},
						{
							"name": "List Tracking Plan-Source Connections",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{backend_url}}/{{trackingplan_base_path}}/trackingplans/:id/source-connections",
									"host": [
										"{{backend_url}}"
									],
									"path": [
										"{{trackingplan_base_path}}",
										"trackingplans",
										":id",
										"source-connections"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{tracking_plan_id}}"
										}
									]
								},
								"description": "Fetches all the sources connected to given tracking plan."
							},
							"response": [
								{
									"name": "List of connections to Tracking Plan",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.rudderstack.com/v1/dg/trackingplans/:id/source-connections",
											"protocol": "https",
											"host": [
												"api",
												"rudderstack",
												"com"
											],
											"path": [
												"v1",
												"dg",
												"trackingplans",
												":id",
												"source-connections"
											],
											"variable": [
												{
													"key": "id",
													"value": "tp_1ySO5mS8gK3gvyC88YiJJVj7hr3"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "307"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Wed, 10 Nov 2021 13:06:19 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Request-ID",
											"value": "fec4bee0-4226-11ec-b255-7f702116b536"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 c94da9cdc6b5a8cdec5c3956d92170f5.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "BLR50-C3"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "tHaY6j9wuEqvs0EvB4u4Om-8fr6bjTgaRV_ltYxjzRNsmWg9OgZeeA=="
										}
									],
									"cookie": [],
									"body": "{\n    \"connections\": [\n        {\n            \"source_name\": \"workspaces/1n6JajCyRa12om0GB1FxGEodIf8/sources/1qSuNc0KtpNOuesADEHAnRzihZq\",\n            \"tracking_plan_id\": \"tp_1ySO5mS8gK3gvyC88YiJJVj7hr3\"\n        },\n        {\n            \"source_name\": \"workspaces/1n6JajCyRa12om0GB1FxGEodIf8/sources/1uJ1Ofn6qRh92sGeyJE1bueU3u7\",\n            \"tracking_plan_id\": \"tp_1ySO5mS8gK3gvyC88YiJJVj7hr3\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Delete Tracking Plan-Source Connection",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{backend_url}}/{{trackingplan_base_path}}/trackingplans/:id/source-connections/:sourceId",
									"host": [
										"{{backend_url}}"
									],
									"path": [
										"{{trackingplan_base_path}}",
										"trackingplans",
										":id",
										"source-connections",
										":sourceId"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{tracking_plan_id}}"
										},
										{
											"key": "sourceId",
											"value": "{{source_id}}"
										}
									]
								},
								"description": "Deletes the connection between a given source ID and a tracking plan ID."
							},
							"response": [
								{
									"name": "Delete Source connection",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.rudderstack.com/v1/dg/trackingplans/:id/source-connections/:sourceId",
											"protocol": "https",
											"host": [
												"api",
												"rudderstack",
												"com"
											],
											"path": [
												"v1",
												"dg",
												"trackingplans",
												":id",
												"source-connections",
												":sourceId"
											],
											"variable": [
												{
													"key": "id",
													"value": "tp_1ySO5mS8gK3gvyC88YiJJVj7hr3"
												},
												{
													"key": "sourceId",
													"value": "1qSuNc0KtpNOuesADEHAnRzihZq"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "16"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Date",
											"value": "Wed, 10 Nov 2021 13:08:12 GMT"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Request-ID",
											"value": "4244ddd0-4227-11ec-87ae-191b21e4b239"
										},
										{
											"key": "X-Cache",
											"value": "Miss from cloudfront"
										},
										{
											"key": "Via",
											"value": "1.1 c94da9cdc6b5a8cdec5c3956d92170f5.cloudfront.net (CloudFront)"
										},
										{
											"key": "X-Amz-Cf-Pop",
											"value": "BLR50-C3"
										},
										{
											"key": "X-Amz-Cf-Id",
											"value": "kto1xRYQAVUp_VrG3aKSej3dgZcON47G6d25uMrUI9MfSZob5CpC2w=="
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true\n}"
								}
							]
						}
					],
					"description": "This section covers the requests needed for:\n\n*   Creating or updating a tracking plan configuration for a given source.\n*   Fetching the tracking plan configuration for a given source.\n*   Connecting a tracking plan to a given source.\n*   Listing all your source-tracking plan connections.\n*   Deleting or removing a source-tracking plan connection."
				}
			],
			"description": "This collection contains a list of the supporting **Data Governance API** calls and models with relevant examples.\n\n## Tracking Plan Model\n\n| **Attribute** | **Type** | **Description** | **Requirement** |\n| --- | --- | --- | --- |\n| `name` | ID | Autogenerated name | Read-only |\n| `display_name` | String | Display name of the plan | Required |\n| `rules` | Rules | Schema rules for the plan | Optional |\n| `version` | Version | Current version of the plan | Read-only |\n| `create_time` | DateTime | Time of creation | Read-only |\n| `update_time` | DateTime | Time of update | Read-only |\n\n## Rules Model\n\n| Attribute | Type | Description | Requirement |\n| --- | --- | --- | --- |\n| `events` | Array\\[object\\] | Rules applied to the `track` calls | Optional |\n\n## Events Model\n\n| Attribute | Type | Description | Requirement |\n| --- | --- | --- | --- |\n| `name` | String | Event Name | Required |\n| `description` | String | Event description | Optional |\n| `rules` | JSON | Rules applied to the event | Required |\n\n# Access Tokens\n\nYou can generate the personal access token to access this API by following the documentation [here](https://www.rudderstack.com/docs/rudderstack-api/personal-access-tokens/).\n\n| Authentication Params | Type | Description |\n| --- | --- | --- |\n| `username` | String | Email ID of the user |\n| `password` | String | Personal access token |",
			"auth": {
				"type": "basic",
				"basic": [
					{
						"key": "password",
						"value": "x",
						"type": "string"
					},
					{
						"key": "username",
						"value": "x",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Test API",
			"item": [
				{
					"name": "Verifying destination events",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "1zl4s9Kv6Gnr5aFHYWQ7EH7ggpL",
									"type": "string"
								},
								{
									"key": "username",
									"value": "sandhya+987@rudderstack.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": {\n        \"context\": {\n            \"traits\": {\n                \"firstName\": \"James\",\n                \"lastName\": \"Doe\"\n            }\n        },\n        \"type\": \"identify\",\n        \"userId\": \"abc@123.com\"\n    },\n    \"stage\": {\n        \"user_transform\": true,\n        \"dest_transform\": true,\n        \"send_to_destination\": true\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.dev.rudderlabs.com/v0/testDestination/1tKpO0kantcKjd5czXVD1cdwUBE",
							"protocol": "https",
							"host": [
								"api",
								"dev",
								"rudderlabs",
								"com"
							],
							"path": [
								"v0",
								"testDestination",
								"1tKpO0kantcKjd5czXVD1cdwUBE"
							]
						}
					},
					"response": [
						{
							"name": "Verifying destination events",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": {\n        \"context\": {\n            \"traits\": {\n                \"firstName\": \"James\",\n                \"lastName\": \"Doe\"\n            }\n        },\n        \"type\": \"identify\",\n        \"userId\": \"abc@123.com\"\n    },\n    \"stage\": {\n        \"user_transform\": true,\n        \"dest_transform\": true,\n        \"send_to_destination\": true\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.dev.rudderlabs.com/v0/testDestination/1tKpO0kantcKjd5czXVD1cdwUBE",
									"protocol": "https",
									"host": [
										"api",
										"dev",
										"rudderlabs",
										"com"
									],
									"path": [
										"v0",
										"testDestination",
										"1tKpO0kantcKjd5czXVD1cdwUBE"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "832"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Date",
									"value": "Wed, 01 Jun 2022 04:15:00 GMT"
								},
								{
									"key": "X-Request-ID",
									"value": "66789aa0-e161-11ec-a5d0-7b69306ad852"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "Via",
									"value": "1.1 ccf4fceffb0daeece712ab7a48c32588.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "BLR50-C2"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "e499DbAOhkK5CK40M4WbBHj4pmpURPifcb713VpEk7z21Ahr36KaQw=="
								}
							],
							"cookie": [],
							"body": "{\n    \"destinationId\": \"1tKpO0kantcKjd5czXVD1cdwUBE\",\n    \"destination\": \"MARKETO\",\n    \"destinationName\": \"Marketo\",\n    \"data\": [\n        {\n            \"user_transformed_payload\": {\n                \"error\": \"Transformation VersionID not found\"\n            },\n            \"dest_transformed_payload\": [\n                {\n                    \"version\": \"1\",\n                    \"type\": \"REST\",\n                    \"method\": \"POST\",\n                    \"endpoint\": \"https://585-AXP-425.mktorest.com/rest/v1/leads.json\",\n                    \"headers\": {\n                        \"Authorization\": \"Bearer da7c578c-f919-4049-b1de-42ee6bb26de6:ab\",\n                        \"Content-Type\": \"application/json\"\n                    },\n                    \"params\": {},\n                    \"body\": {\n                        \"JSON\": {\n                            \"action\": \"createOrUpdate\",\n                            \"input\": [\n                                {\n                                    \"FirstName\": \"James\",\n                                    \"LastName\": \"Doe\",\n                                    \"lastName\": \"Doe\",\n                                    \"firstName\": \"James\",\n                                    \"id\": 1328262,\n                                    \"userId\": \"abc@123.com\"\n                                }\n                            ],\n                            \"lookupField\": \"id\"\n                        },\n                        \"JSON_ARRAY\": {},\n                        \"XML\": {},\n                        \"FORM\": {}\n                    },\n                    \"files\": {}\n                }\n            ],\n            \"destination_response\": [\n                {\n                    \"requestId\": \"e2ef#1811d7951fc\",\n                    \"result\": [\n                        {\n                            \"id\": 1328262,\n                            \"status\": \"updated\"\n                        }\n                    ],\n                    \"success\": true\n                }\n            ],\n            \"destination_response_status\": [\n                200\n            ]\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Verifying source events",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "1zl4s9Kv6Gnr5aFHYWQ7EH7ggpL",
									"type": "string"
								},
								{
									"key": "username",
									"value": "sandhya+987@rudderstack.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": {\n        \"context\": {\n            \"traits\": {\n                \"firstName\": \"James\",\n                \"lastName\": \"Doe\"\n            }\n        },\n        \"type\": \"identify\",\n        \"userId\": \"abc@123.com\"\n    },\n    \"stage\": {\n        \"user_transform\": true,\n        \"dest_transform\": true,\n        \"send_to_destination\": true\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.dev.rudderlabs.com/v0/testSource/1zlmsBMe1dcPbu3u6NTZFUFBrNQ",
							"protocol": "https",
							"host": [
								"api",
								"dev",
								"rudderlabs",
								"com"
							],
							"path": [
								"v0",
								"testSource",
								"1zlmsBMe1dcPbu3u6NTZFUFBrNQ"
							]
						}
					},
					"response": [
						{
							"name": "Verifying source events",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": {\n        \"context\": {\n            \"traits\": {\n                \"firstName\": \"James\",\n                \"lastName\": \"Doe\"\n            }\n        },\n        \"type\": \"identify\",\n        \"userId\": \"abc@123.com\"\n    },\n    \"stage\": {\n        \"user_transform\": true,\n        \"dest_transform\": true,\n        \"send_to_destination\": true\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.dev.rudderlabs.com/v0/testSource/1zlmsBMe1dcPbu3u6NTZFUFBrNQ",
									"protocol": "https",
									"host": [
										"api",
										"dev",
										"rudderlabs",
										"com"
									],
									"path": [
										"v0",
										"testSource",
										"1zlmsBMe1dcPbu3u6NTZFUFBrNQ"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1908"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Date",
									"value": "Wed, 01 Jun 2022 04:15:11 GMT"
								},
								{
									"key": "X-Request-ID",
									"value": "6d494b40-e161-11ec-b6db-3527087966ea"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Cache",
									"value": "Miss from cloudfront"
								},
								{
									"key": "Via",
									"value": "1.1 ccf4fceffb0daeece712ab7a48c32588.cloudfront.net (CloudFront)"
								},
								{
									"key": "X-Amz-Cf-Pop",
									"value": "BLR50-C2"
								},
								{
									"key": "X-Amz-Cf-Id",
									"value": "qPUHPyL4RVdfHtofnTGz16tue0MdH51G6uiWIoqH6IqRvrilEXxtrg=="
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"destinationId\": \"1tIgXcaRnQDlBBtxlJMGGHFUWGb\",\n        \"destination\": \"SALESFORCE\",\n        \"destinationName\": \"salesforce\",\n        \"data\": [\n            {\n                \"user_transformed_payload\": {\n                    \"error\": \"Transformation VersionID not found\"\n                },\n                \"dest_transformed_payload\": {\n                    \"error\": \"SALESFORCE AUTH FAILED: Request failed with status code 400\"\n                },\n                \"destination_response\": {\n                    \"error\": \"error encountered in dest_transformation stage. Aborting.\"\n                }\n            }\n        ]\n    },\n    {\n        \"destinationId\": \"1zl4i0J8M8T7sozoLnueW46RVYe\",\n        \"destination\": \"WEBHOOK\",\n        \"destinationName\": \"test-webhook-dest\",\n        \"data\": [\n            {\n                \"user_transformed_payload\": {\n                    \"error\": \"Transformation VersionID not found\"\n                },\n                \"dest_transformed_payload\": [\n                    {\n                        \"version\": \"1\",\n                        \"type\": \"REST\",\n                        \"method\": \"POST\",\n                        \"endpoint\": \"https://webhook.site/9d5e3e43-6c2b-4b84-be9f-0147347b4cdf\",\n                        \"headers\": {\n                            \"content-type\": \"application/json\"\n                        },\n                        \"params\": {},\n                        \"body\": {\n                            \"JSON\": {\n                                \"context\": {\n                                    \"traits\": {\n                                        \"firstName\": \"James\",\n                                        \"lastName\": \"Doe\"\n                                    }\n                                },\n                                \"type\": \"identify\",\n                                \"userId\": \"abc@123.com\"\n                            },\n                            \"JSON_ARRAY\": {},\n                            \"XML\": {},\n                            \"FORM\": {}\n                        },\n                        \"files\": {}\n                    }\n                ],\n                \"destination_response\": [\n                    {\n                        \"success\": false,\n                        \"error\": {\n                            \"message\": \"Token not found\",\n                            \"id\": null\n                        }\n                    }\n                ],\n                \"destination_response_status\": [\n                    404\n                ]\n            }\n        ]\n    },\n    {\n        \"destinationId\": \"1tKpO0kantcKjd5czXVD1cdwUBE\",\n        \"destination\": \"MARKETO\",\n        \"destinationName\": \"Marketo\",\n        \"data\": [\n            {\n                \"user_transformed_payload\": {\n                    \"error\": \"Transformation VersionID not found\"\n                },\n                \"dest_transformed_payload\": [\n                    {\n                        \"version\": \"1\",\n                        \"type\": \"REST\",\n                        \"method\": \"POST\",\n                        \"endpoint\": \"https://585-AXP-425.mktorest.com/rest/v1/leads.json\",\n                        \"headers\": {\n                            \"Authorization\": \"Bearer da7c578c-f919-4049-b1de-42ee6bb26de6:ab\",\n                            \"Content-Type\": \"application/json\"\n                        },\n                        \"params\": {},\n                        \"body\": {\n                            \"JSON\": {\n                                \"action\": \"createOrUpdate\",\n                                \"input\": [\n                                    {\n                                        \"FirstName\": \"James\",\n                                        \"LastName\": \"Doe\",\n                                        \"lastName\": \"Doe\",\n                                        \"firstName\": \"James\",\n                                        \"id\": 1328262,\n                                        \"userId\": \"abc@123.com\"\n                                    }\n                                ],\n                                \"lookupField\": \"id\"\n                            },\n                            \"JSON_ARRAY\": {},\n                            \"XML\": {},\n                            \"FORM\": {}\n                        },\n                        \"files\": {}\n                    }\n                ],\n                \"destination_response\": [\n                    {\n                        \"requestId\": \"b13d#1811d797e90\",\n                        \"result\": [\n                            {\n                                \"id\": 1328262,\n                                \"status\": \"updated\"\n                            }\n                        ],\n                        \"success\": true\n                    }\n                ],\n                \"destination_response_status\": [\n                    200\n                ]\n            }\n        ]\n    }\n]"
						}
					]
				}
			],
			"auth": {
				"type": "basic",
				"basic": [
					{
						"key": "password",
						"value": "1zl4s9Kv6Gnr5aFHYWQ7EH7ggpL",
						"type": "string"
					},
					{
						"key": "username",
						"value": "sandhya+987@rudderstack.com",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "backend_url",
			"value": "https://api.rudderstack.com"
		},
		{
			"key": "trackingplan_base_path",
			"value": "v1/dg"
		},
		{
			"key": "host",
			"value": "https://api.rudderstack.com"
		}
	]
}