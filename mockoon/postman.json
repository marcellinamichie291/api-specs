{
    "uuid": "2d6987e0-2b86-4586-8905-ed3360cfa3ac",
    "lastMigration": 19,
    "name": "Postman API",
    "endpointPrefix": "",
    "latency": 0,
    "port": 3000,
    "hostname": "0.0.0.0",
    "routes": [
      {
        "uuid": "669b7ee8-0cee-489e-85a7-b55ff6685247",
        "documentation": "Get all APIs",
        "method": "get",
        "endpoint": "apis",
        "responses": [
          {
            "uuid": "c28b3016-fbcf-4fdd-86f6-41a4b2f1da41",
            "body": "",
            "latency": 0,
            "statusCode": 200,
            "label": "",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "53386877-f37c-4aa5-ae21-c4fe63206ed0",
        "documentation": "Create API",
        "method": "post",
        "endpoint": "apis",
        "responses": [
          {
            "uuid": "0127a61f-9b9a-4c90-8b4e-086f7a641cc1",
            "body": "{\n  \"api\": {\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"createdBy\": \"5665\",\n    \"description\": \"This is supposed to handle markdown *descriptions*.\",\n    \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n    \"name\": \"Sync API\",\n    \"summary\": \"This is a summary\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Create API",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "128a64b9-9c5b-4676-8cfb-0a6ab68be038",
        "documentation": "Delete an API",
        "method": "delete",
        "endpoint": "apis/:apiId",
        "responses": [
          {
            "uuid": "ad4ba2c5-d686-46df-9745-497469a6ea9b",
            "body": "{\n  \"api\": {\n    \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Delete an API",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "bf589be7-9f88-4401-87e9-ab67ded8a129",
        "documentation": "Single API",
        "method": "get",
        "endpoint": "apis/:apiId",
        "responses": [
          {
            "uuid": "31185040-666f-4713-b974-d029891c84b3",
            "body": "{\n  \"api\": {\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"createdBy\": \"5665\",\n    \"description\": \"This is a description.This is a description.\",\n    \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n    \"name\": \"Sync API\",\n    \"summary\": \"This is a summary\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Get single API",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "a1e103ca-baee-434a-a6f9-398d09410c9d",
        "documentation": "Update an API",
        "method": "put",
        "endpoint": "apis/:apiId",
        "responses": [
          {
            "uuid": "1c9f6ac8-2aea-4bbd-8dc9-fcdd6a9a1a81",
            "body": "{\n  \"api\": {\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"createdBy\": \"5665\",\n    \"description\": \"This is a description.\",\n    \"id\": \"387c2863-6ee3-4a56-8210-225f774edade\",\n    \"name\": \"Sync API\",\n    \"summary\": \"This is a summary\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Update an API",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "0c97fc25-7803-4842-b1b6-562b9b0b623f",
        "documentation": "Get All API Versions",
        "method": "get",
        "endpoint": "apis/:apiId/versions",
        "responses": [
          {
            "uuid": "22fc7ad3-431f-4f02-bb29-4a6cec0da2ff",
            "body": "{\n  \"versions\": [\n    {\n      \"createdAt\": \"2019-02-12 19:34:49\",\n      \"createdBy\": \"5665\",\n      \"description\": \"Description\",\n      \"id\": \"024660a6-c837-46ca-91d8-7e8dd7c669de\",\n      \"name\": \"0.1\",\n      \"summary\": \"Summary\",\n      \"updatedAt\": \"2019-02-12 19:34:49\"\n    }\n  ]\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Get All API versions",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "896b71c9-cad6-49df-99de-b8b93b727a8f",
        "documentation": "Create API Version",
        "method": "post",
        "endpoint": "apis/:apiId/versions",
        "responses": [
          {
            "uuid": "2ddd605c-31fc-4717-b702-1692c0c25e6d",
            "body": "{\n  \"version\": {\n    \"api\": \"2b95d07c-8379-4bd1-924f-e7e1af185284\",\n    \"id\": \"d71cf403-c549-4c7c-9dc6-a6a105acf67c\",\n    \"name\": \"1.0\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Create API version",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "8ea8c4fe-606d-4228-a599-fef34ae44004",
        "documentation": "Delete an API Version",
        "method": "delete",
        "endpoint": "apis/:apiId/versions/:apiVersionId",
        "responses": [
          {
            "uuid": "ed82cee9-672e-43cc-aeb4-2bf8e707287c",
            "body": "{\n  \"version\": {\n    \"id\": \"03c17f53-7e2e-427d-b55a-006b244f29ff\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Delete an API version",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "07065ba8-a27b-4b22-a7e3-3db69bd0a1f9",
        "documentation": "Get an API Version",
        "method": "get",
        "endpoint": "apis/:apiId/versions/:apiVersionId",
        "responses": [
          {
            "uuid": "e157735a-ffdc-4a06-b90c-d969099c815c",
            "body": "{\n  \"version\": {\n    \"api\": \"06e41ca3-8bea-4bc5-a726-70338b9f1940\",\n    \"createdAt\": \"2019-07-21T16:31:15.000Z\",\n    \"createdBy\": \"5665\",\n    \"id\": \"03c17f53-7e2e-427d-b55a-006b244f29ff\",\n    \"name\": \"0.1\",\n    \"schema\": [\n      \"3484cd1e-e00d-4c39-aea4-539663afe898\"\n    ],\n    \"updatedAt\": \"2019-07-21T16:31:15.000Z\",\n    \"updatedBy\": \"5665\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Get an API version",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "c403df5a-6914-40a1-8a88-e4ea6e07346c",
        "documentation": "Update an API Version",
        "method": "put",
        "endpoint": "apis/:apiId/versions/:apiVersionId",
        "responses": [
          {
            "uuid": "8b84f9f7-e092-48ec-b082-052df15ee1e1",
            "body": "{\n  \"version\": {\n    \"api\": \"2b95d07c-8379-4bd1-924f-e7e1af185284\",\n    \"createdAt\": \"2019-07-26T11:24:15.000Z\",\n    \"createdBy\": \"12\",\n    \"id\": \"d71cf403-c549-4c7c-9dc6-a6a105acf67c\",\n    \"name\": \"2.0\",\n    \"updatedAt\": \"2019-08-09T09:27:36.000Z\",\n    \"updatedBy\": \"5665\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Update an API version",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "9a1ad6a5-5098-41cb-99aa-a0f06474a977",
        "documentation": "Get contract test relations",
        "method": "get",
        "endpoint": "apis/:apiId/versions/:apiVersionId/contracttest",
        "responses": [
          {
            "uuid": "81390755-db7b-4dff-a1bc-b327dadd648f",
            "body": "{\n  \"contracttest\": [\n    {\n      \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\",\n      \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n      \"name\": \"C test\",\n      \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n    }\n  ]\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Get contract test relations",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "c3b77a2b-882b-4bef-977d-fcec33c03828",
        "documentation": "Get  documentation relations",
        "method": "get",
        "endpoint": "apis/:apiId/versions/:apiVersionId/documentation",
        "responses": [
          {
            "uuid": "55b47c6d-7fe0-4133-8292-220828a2d8f1",
            "body": "{\n  \"documentation\": [\n    {\n      \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\",\n      \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n      \"name\": \"C test\",\n      \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n    }\n  ]\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Get documentation relations",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "4c98dad1-7cb0-4972-93d5-5bf25c9d0068",
        "documentation": "Get environment relations",
        "method": "get",
        "endpoint": "apis/:apiId/versions/:apiVersionId/environment",
        "responses": [
          {
            "uuid": "8e9a03ce-f113-4051-af2b-8de4cec0c8ce",
            "body": "{\n  \"environment\": [\n    {\n      \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n      \"name\": \"C test\",\n      \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n    }\n  ]\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Get environment relations",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "0f9712b7-1913-491c-ad44-df0042872105",
        "documentation": "Get integration test relations",
        "method": "get",
        "endpoint": "apis/:apiId/versions/:apiVersionId/integrationtest",
        "responses": [
          {
            "uuid": "03a46344-aeba-4c4e-8d67-3d676154edd5",
            "body": "{\n  \"integrationtest\": [\n    {\n      \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\",\n      \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n      \"name\": \"C test\",\n      \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n    }\n  ]\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Get integration test relations",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "088e1c22-99f3-4233-bb1d-47148f9a1930",
        "documentation": "Get monitor relations",
        "method": "get",
        "endpoint": "apis/:apiId/versions/:apiVersionId/monitor",
        "responses": [
          {
            "uuid": "b6520688-3ba5-42c4-bc32-be87b584c1c4",
            "body": "{\n  \"monitor\": [\n    {\n      \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n      \"monitorId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\",\n      \"name\": \"C test\",\n      \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n    }\n  ]\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Get monitor relations",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "b7b2f6e4-9bfd-4141-bef6-a92fa56e0e2e",
        "documentation": "Get linked relations",
        "method": "get",
        "endpoint": "apis/:apiId/versions/:apiVersionId/relations",
        "responses": [
          {
            "uuid": "de5bd631-2f6e-4973-b47f-cfe3ccaa46db",
            "body": "{\n  \"relations\": {\n    \"contracttest\": {\n      \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\": {\n        \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n        \"name\": \"C test\",\n        \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n      }\n    },\n    \"integrationtest\": {\n      \"521b0486-ab91-4d3a-9189-43c9380a0533\": {\n        \"id\": \"521b0486-ab91-4d3a-9189-43c9380a0533\",\n        \"name\": \"C1\",\n        \"updatedAt\": \"2019-08-29T11:40:39.000Z\"\n      },\n      \"a236b715-e682-460b-97b6-c1db24f7612e\": {\n        \"id\": \"a236b715-e682-460b-97b6-c1db24f7612e\",\n        \"name\": \"C test\",\n        \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n      }\n    },\n    \"mock\": {\n      \"4ccd755f-2c80-481b-a262-49b55e12f5e1\": {\n        \"id\": \"4ccd755f-2c80-481b-a262-49b55e12f5e1\",\n        \"name\": \"Mock\",\n        \"updatedAt\": \"2019-08-20T10:18:13.000Z\",\n        \"url\": \"https://4ccd755f-2c80-481b-a262-49b55e12f5e1.mock-beta.pstmn.io\"\n      }\n    }\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Get linked relations for an API version",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "7ba3ab8a-c5a0-4a5b-b1c8-76ffd1679ddc",
        "documentation": "Create relations",
        "method": "post",
        "endpoint": "apis/:apiId/versions/:apiVersionId/relations",
        "responses": [
          {
            "uuid": "2e0b5bf9-07b3-41d5-a997-7fe6c263d37a",
            "body": "{\n  \"contracttest\": [\n    \"5bcece87-ca4b-4e75-a967-2a6845626164\"\n  ],\n  \"documentation\": [\n    \"2084eba6-a17b-4751-8f03-ea60f30ba19c\"\n  ],\n  \"testsuite\": [\n    \"e525fa71-035e-4620-acda-ce878524f1e7\"\n  ]\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Create multiple relations from existing collections",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "2338b185-12bf-465c-b31d-ca020aa5f086",
        "documentation": "Create Schema",
        "method": "post",
        "endpoint": "apis/:apiId/versions/:apiVersionId/schemas",
        "responses": [
          {
            "uuid": "c5bcb321-325e-4470-ac16-a30ac0bad45f",
            "body": "{\n  \"schema\": {\n    \"apiVersion\": \"ad810c39-df60-434e-a76f-a2192cd8d81f\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"createdBy\": \"5665\",\n    \"id\": \"e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\",\n    \"language\": \"yaml\",\n    \"type\": \"openapi3\",\n    \"updateBy\": \"5665\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Create schema",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "8102389c-249a-4404-a05b-545a459ced0e",
        "documentation": "Get Schema",
        "method": "get",
        "endpoint": "apis/:apiId/versions/:apiVersionId/schemas/:schemaId",
        "responses": [
          {
            "uuid": "34cea855-f11b-4c06-8364-1566f68e7993",
            "body": "{\n  \"schema\": {\n    \"apiVersion\": \"ad810c39-df60-434e-a76f-a2192cd8d81f\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"createdBy\": \"5665\",\n    \"id\": \"e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\",\n    \"language\": \"yaml\",\n    \"type\": \"openapi3\",\n    \"updateBy\": \"5665\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Get schema",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "aedc30b2-f685-40de-934b-a193a93f68c9",
        "documentation": "Update Schema",
        "method": "put",
        "endpoint": "apis/:apiId/versions/:apiVersionId/schemas/:schemaId",
        "responses": [
          {
            "uuid": "d9249107-5a48-4a7f-ad8b-d793546f5c7f",
            "body": "{\n  \"schema\": {\n    \"apiVersion\": \"ad810c39-df60-434e-a76f-a2192cd8d81f\",\n    \"createdAt\": \"2019-02-12 19:34:49\",\n    \"createdBy\": \"5665\",\n    \"id\": \"e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822\",\n    \"language\": \"yaml\",\n    \"type\": \"openapi3\",\n    \"updateBy\": \"5665\",\n    \"updatedAt\": \"2019-02-12 19:34:49\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Update schema",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "ea6417a9-ee74-4f45-9680-4462889eb9d1",
        "documentation": "Create collection from schema",
        "method": "post",
        "endpoint": "apis/:apiId/versions/:apiVersionId/schemas/:schemaId/collections",
        "responses": [
          {
            "uuid": "95fe53a7-1b40-4cad-b875-e69e54046f75",
            "body": "{\n  \"collection\": {\n    \"id\": \"e6b0d46a-8722-4f42-ab86-f5f473187ddf\",\n    \"uid\": \"112098-e6b0d46a-8722-4f42-ab86-f5f473187ddf\"\n  },\n  \"relations\": [\n    {\n      \"id\": \"4b40f06a-5a6a-448f-bfcd-a6dbcb68da22\",\n      \"type\": \"contracttest\"\n    }\n  ]\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Create collection from schema",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "008fd081-5b1e-42d0-bf70-739343216e15",
        "documentation": "Get test suite relations",
        "method": "get",
        "endpoint": "apis/:apiId/versions/:apiVersionId/testsuite",
        "responses": [
          {
            "uuid": "dbefb5d9-f2ea-4c94-af86-f731fb6480d6",
            "body": "{\n  \"testsuite\": [\n    {\n      \"collectionId\": \"7732157-a8bcd149-2b01-4b4c-8c14-c7d05be77745\",\n      \"id\": \"2a9b8fa8-88b7-4b86-8372-8e3f6f6e07f2\",\n      \"name\": \"C test\",\n      \"updatedAt\": \"2019-08-29T10:18:11.000Z\"\n    }\n  ]\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Get test suite relations",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "b3f43aab-ae95-405f-99c7-6ec72f5d9949",
        "documentation": "Sync relations with schema",
        "method": "put",
        "endpoint": "apis/:apiId/versions/:apiVersionId/:entityType/:entityId/syncWithSchema",
        "responses": [
          {
            "uuid": "282c73bc-c9a7-46e4-aa20-68c2f5733c44",
            "body": "{\n  \"success\": true\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Successful sync",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          },
          {
            "uuid": "c232fe0c-e20a-4151-b4c1-37b8d668f6ea",
            "body": "{\n  \"error\": {\n    \"message\": \"Unable to validate. Only the OpenAPI 3.0 schema format is supported.\",\n    \"name\": \"validationFailed\"\n  }\n}",
            "latency": 0,
            "statusCode": 400,
            "label": "Failed to sync",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "a2dd7812-7fdd-4b80-a964-2b053633430e",
        "documentation": "All Collections",
        "method": "get",
        "endpoint": "collections",
        "responses": [
          {
            "uuid": "7ea9dcb5-bfcc-4930-815d-babcc97aad03",
            "body": "{\n  \"collections\": [\n    {\n      \"id\": \"dac5eac9-148d-a32e-b76b-3edee9da28f7\",\n      \"name\": \"Cloud API\",\n      \"owner\": \"631643\",\n      \"uid\": \"631643-dac5eac9-148d-a32e-b76b-3edee9da28f7\"\n    }\n  ]\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Valid Response",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "6d37e544-3ecb-4aa1-87b4-ae313556eebf",
        "documentation": "Create Collection",
        "method": "post",
        "endpoint": "collections",
        "responses": [
          {
            "uuid": "f40f0729-451b-4467-8aac-15618946afc8",
            "body": "{\n  \"collection\": {\n    \"id\": \"2412a72c-1d8e-491b-aced-93809c0e94e9\",\n    \"name\": \"Sample Collection\",\n    \"uid\": \"5852-2412a72c-1d8e-491b-aced-93809c0e94e9\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Create Collection in a Workspace",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          },
          {
            "uuid": "938fcfe4-b07d-4ab8-8c7b-ba3be34531d0",
            "body": "{\n  \"error\": {\n    \"message\": \"Missing required property: name at info\",\n    \"name\": \"malformedRequestError\"\n  }\n}",
            "latency": 0,
            "statusCode": 400,
            "label": "Malformed Request",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "7fca453c-b63e-4b90-b0f7-3de8fa2195aa",
        "documentation": "Create a Fork",
        "method": "post",
        "endpoint": "collections/fork/:collection_uid",
        "responses": [
          {
            "uuid": "53b0574a-7669-4912-87a1-ac411dc55dc1",
            "body": "",
            "latency": 0,
            "statusCode": 200,
            "label": "",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "9b0ebef6-e666-4c6e-bbdf-ad6685719168",
        "documentation": "Merge a Fork",
        "method": "post",
        "endpoint": "collections/merge",
        "responses": [
          {
            "uuid": "fdbde407-16a3-42e7-b56a-e64604a29681",
            "body": "",
            "latency": 0,
            "statusCode": 200,
            "label": "",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "ab21fcff-4308-4021-94c7-8cd7c2ca1966",
        "documentation": "Delete Collection",
        "method": "delete",
        "endpoint": "collections/:collection_uid",
        "responses": [
          {
            "uuid": "314e8db8-0e2a-42cd-9e9b-d928c203ea11",
            "body": "{\n  \"collection\": {\n    \"id\": \"a14c6da7-afba-4a84-bf22-4febbaaced6c\",\n    \"uid\": \"5852-a14c6da7-afba-4a84-bf22-4febbaaced6c\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Collection Deleted",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          },
          {
            "uuid": "13a8c5f2-405a-46d2-be61-9461e0a4800c",
            "body": "{\n  \"error\": {\n    \"details\": {\n      \"id\": \"a14c6da7-afba-4a84-bf22-4febbaaced6c\",\n      \"item\": \"collection\"\n    },\n    \"message\": \"The specified item does not exist.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}",
            "latency": 0,
            "statusCode": 404,
            "label": "Collection Not Found",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "e0e85d14-1555-4e7d-a7ed-c69710097896",
        "documentation": "Single Collection ",
        "method": "get",
        "endpoint": "collections/:collection_uid",
        "responses": [
          {
            "uuid": "3b7b5162-48e4-48bc-bf0d-6784decc066b",
            "body": "{\n  \"collection\": {\n    \"info\": {\n      \"_postman_id\": \"f2e66c2e-5297-e4a5-739e-20cbb90900e3\",\n      \"description\": \"This is a sample collection that makes a tiny request to Postman Echo service to get the list of request headers sent by a HTTP client.\",\n      \"name\": \"Sample Collection\",\n      \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"\n    },\n    \"item\": [\n      {\n        \"event\": [\n          {\n            \"listen\": \"test\",\n            \"script\": {\n              \"exec\": \"var responseJSON;\\ntry {\\n    tests[\\\"Body contains headers\\\"] = responseBody.has(\\\"headers\\\");\\n    responseJSON = JSON.parse(responseBody);\\n    tests[\\\"Header contains host\\\"] = \\\"host\\\" in responseJSON.headers;\\n    tests[\\\"Header contains test parameter sent as part of request header\\\"] = \\\"my-sample-header\\\" in responseJSON.headers;\\n}\\ncatch (e) { }\\n\\n\\n\\n\",\n              \"type\": \"text/javascript\"\n            }\n          }\n        ],\n        \"id\": \"82ee981b-e19f-962a-401e-ea34ebfb4848\",\n        \"name\": \"Request Headers\",\n        \"request\": {\n          \"body\": {\n            \"formdata\": [\n              \"\"\n            ],\n            \"mode\": \"formdata\"\n          },\n          \"description\": \"\",\n          \"header\": [\n            {\n              \"description\": \"\",\n              \"key\": \"my-sample-header\",\n              \"value\": \"Lorem ipsum dolor sit amet\"\n            }\n          ],\n          \"method\": \"GET\",\n          \"url\": \"https://echo.getpostman.com/headers\"\n        },\n        \"response\": [\n          \"\"\n        ]\n      }\n    ],\n    \"variables\": [\n      \"\"\n    ]\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Valid Response",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "7b185c23-4ce4-437b-8a6c-55f5f19fe7cb",
        "documentation": "Update Collection",
        "method": "put",
        "endpoint": "collections/:collection_uid",
        "responses": [
          {
            "uuid": "069b07aa-b87c-471c-b44f-b24c39280033",
            "body": "{\n  \"collection\": {\n    \"id\": \"1d3daef4-2037-4584-ab86-bafd8c8f8a55\",\n    \"name\": \"Sample Collection\",\n    \"uid\": \"5852-1d3daef4-2037-4584-ab86-bafd8c8f8a55\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Collection Updated",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          },
          {
            "uuid": "2caabf16-0dab-4b6e-940e-8e197e63bb0e",
            "body": "{\n  \"error\": {\n    \"message\": \"The collection ID in the path does not match the collection ID in the request body.\",\n    \"name\": \"collectionMismatchError\"\n  }\n}",
            "latency": 0,
            "statusCode": 400,
            "label": "Collection ID Mismatch",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          },
          {
            "uuid": "ba27ca59-4c73-4346-8246-bd1938cbbdd8",
            "body": "{\n  \"error\": {\n    \"message\": \"You do not have enough permissions to perform this action.\",\n    \"name\": \"forbiddenError\"\n  }\n}",
            "latency": 0,
            "statusCode": 403,
            "label": "Not Enough Permissions",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          },
          {
            "uuid": "56cf25f5-e74c-4ac0-a53e-e297210d1495",
            "body": "{\n  \"error\": {\n    \"details\": {\n      \"id\": \"1d3daef4-2037-4584-ab86-bafd8c8f8a54\",\n      \"item\": \"collection\"\n    },\n    \"message\": \"The specified item does not exist.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}",
            "latency": 0,
            "statusCode": 404,
            "label": "Collection Not Found",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "dfbae7d2-4fef-4fcf-87c8-3d4416a00aed",
        "documentation": "All Environments",
        "method": "get",
        "endpoint": "environments",
        "responses": [
          {
            "uuid": "f2e6c67e-76bb-40ea-b7c5-442af45e5c25",
            "body": "{\n  \"environments\": [\n    {\n      \"id\": \"357668d2-84f1-2264-438b-113095359f80\",\n      \"name\": \"Postman Cloud API\",\n      \"owner\": \"631643\",\n      \"uid\": \"631643-357668d2-84f1-2264-438b-113095359f80\"\n    }\n  ]\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Valid Response",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "365a1dba-1c57-423c-963f-fd9700a16626",
        "documentation": "Create Environment",
        "method": "post",
        "endpoint": "environments",
        "responses": [
          {
            "uuid": "78696832-60bb-459a-b82e-f7ec8861e691",
            "body": "{\n  \"environment\": {\n    \"id\": \"f158266e-306b-4702-a2b9-e4ede7878b7a\",\n    \"name\": \"Sample Environment Name (required)\",\n    \"uid\": \"5665-f158266e-306b-4702-a2b9-e4ede7878b7a\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Successful Response",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          },
          {
            "uuid": "9812ee5c-2a92-412f-8efc-2b5976d72bf2",
            "body": "{\n  \"error\": {\n    \"message\": \"Missing required property: environment\",\n    \"name\": \"malformedRequestError\"\n  }\n}",
            "latency": 0,
            "statusCode": 400,
            "label": "Failure Response",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "6444b93f-96e2-41dc-b5b5-d73caa491e6c",
        "documentation": "Delete Environment",
        "method": "delete",
        "endpoint": "environments/:environment_uid",
        "responses": [
          {
            "uuid": "0d9ec8c6-345a-4ff7-a177-a0e69e4e90fa",
            "body": "{\n  \"environment\": {\n    \"id\": \"4dfb28a4-9a6c-4ce4-b31a-17c26a8b2cce\",\n    \"uid\": \"5852-4dfb28a4-9a6c-4ce4-b31a-17c26a8b2cce\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Environment Deleted",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          },
          {
            "uuid": "32fe7a46-a6ec-40f7-868b-df251e37b171",
            "body": "{\n  \"error\": {\n    \"message\": \"The specified environment does not exist.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}",
            "latency": 0,
            "statusCode": 404,
            "label": "Environment Not Found",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "efa4405e-0984-4110-af25-b2b3fcd3f6aa",
        "documentation": "Single Environment",
        "method": "get",
        "endpoint": "environments/:environment_uid",
        "responses": [
          {
            "uuid": "e1a79a28-0820-4e83-b7cd-bb1cf24ed313",
            "body": "{\n  \"environment\": {\n    \"id\": \"84a119b6-f4b1-9120-5f11-a73b17818d70\",\n    \"name\": \"Postman Cloud API.template\",\n    \"values\": [\n      {\n        \"enabled\": true,\n        \"hovered\": {{faker 'random.boolean'}},\n        \"key\": \"postman_api_key\",\n        \"type\": \"text\",\n        \"value\": \"\"\n      }\n    ]\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Valid Response",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "fbff9f89-da6e-49f3-a0f0-841bbb703f99",
        "documentation": "Update Environment",
        "method": "put",
        "endpoint": "environments/:environment_uid",
        "responses": [
          {
            "uuid": "3c4197b7-f62a-4149-abdd-22362446920f",
            "body": "{\n  \"environment\": {\n    \"id\": \"357668d2-84f1-2264-438b-113095359f80\",\n    \"name\": \"New Name\",\n    \"uid\": \"631643-357668d2-84f1-2264-438b-113095359f80\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Successful Response",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          },
          {
            "uuid": "93d81272-91b4-48e5-b77c-6bcc21a8d83e",
            "body": "{\n  \"error\": {\n    \"message\": \"Invalid type: null (expected object) at environment.values.0\",\n    \"name\": \"malformedRequestError\"\n  }\n}",
            "latency": 0,
            "statusCode": 400,
            "label": "Failure Response",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "c89efb21-895b-40f9-bdff-47e237031613",
        "documentation": "Import exported data",
        "method": "post",
        "endpoint": "import/exported",
        "responses": [
          {
            "uuid": "9d180ec3-ddcf-47ec-9d53-81e37eae31da",
            "body": "{\n  \"collections\": [\n    {\n      \"id\": \"b31be584-1b1e-4444-b581-761edf88fe77\",\n      \"name\": \"Swagger Petstore\",\n      \"uid\": \"2282-b31be584-1b1e-4444-b581-761edf88fe77\"\n    }\n  ]\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Success: Import to a specific workspace with workspace ID passed as a query parameter",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          },
          {
            "uuid": "b2503484-cdd6-45d6-8ad2-43f9b3d60eda",
            "body": "{\n  \"error\": {\n    \"details\": {\n      \"param\": \"type\"\n    },\n    \"message\": \"The request body is missing a value for the type parameter. Check your request and try again.\",\n    \"name\": \"paramMissingError\"\n  }\n}",
            "latency": 0,
            "statusCode": 400,
            "label": "Error: Param Missing",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "c22d2920-bd3d-4f88-a2e1-e91b597daec3",
        "documentation": "Import external API specification",
        "method": "post",
        "endpoint": "import/openapi",
        "responses": [
          {
            "uuid": "f1857914-00a4-4c19-a9a5-8b9bf68b08b5",
            "body": "{\n  \"collections\": [\n    {\n      \"id\": \"b31be584-1b1e-4444-b581-761edf88fe77\",\n      \"name\": \"Swagger Petstore\",\n      \"uid\": \"2282-b31be584-1b1e-4444-b581-761edf88fe77\"\n    }\n  ]\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Success: Import to a specific workspace with workspace ID passed as a query parameter",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          },
          {
            "uuid": "ffd8380a-a87e-4bf6-b001-0f91fed4fb7f",
            "body": "{\n  \"error\": {\n    \"details\": {\n      \"param\": \"type\"\n    },\n    \"message\": \"The request body is missing a value for the type parameter. Check your request and try again.\",\n    \"name\": \"paramMissingError\"\n  }\n}",
            "latency": 0,
            "statusCode": 400,
            "label": "Error: Param Missing",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "1ce5b0cb-3fb0-44a7-bcca-f64b124a695a",
        "documentation": "API Key Owner",
        "method": "get",
        "endpoint": "me",
        "responses": [
          {
            "uuid": "1cbd0052-8f44-4a80-82ce-774a95e277b1",
            "body": "{\n  \"operations\": [\n    {\n      \"limit\": 1000000,\n      \"name\": \"mock_usage\",\n      \"overage\": {{faker 'random.number'}},\n      \"usage\": 2382\n    }\n  ],\n  \"user\": {\n    \"avatar\": \"https://www.gravatar.com/avatar/e1f3994f2632af3d1c8c2dcc168a10e6\",\n    \"email\": \"janedoe@example.com\",\n    \"fullName\": \"Jane Doe\",\n    \"id\": \"631643\",\n    \"isPublic\": {{faker 'random.boolean'}},\n    \"username\": \"janedoe\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Valid Response",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "81c169ba-ed62-49d4-9938-2cbbed9bfd49",
        "documentation": "All Mocks",
        "method": "get",
        "endpoint": "mocks",
        "responses": [
          {
            "uuid": "74d94fde-f64c-48d8-8bfa-45c166ce3c52",
            "body": "{\n  \"mocks\": [\n    {\n      \"collection\": \"1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc\",\n      \"environment\": \"1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524\",\n      \"id\": \"0fca2246-c108-41f5-8454-cc032def329f\",\n      \"mockUrl\": \"https://0fca2246-c108-41f5-8454-cc032def329f.mock.pstmn.io\",\n      \"owner\": \"1679925\",\n      \"uid\": \"1679925-0fca2246-c108-41f5-8454-cc032def329f\"\n    }\n  ]\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Successful Response",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "2ddea705-d92b-4c69-9b08-e5e0f3ec103e",
        "documentation": "Create Mock",
        "method": "post",
        "endpoint": "mocks",
        "responses": [
          {
            "uuid": "f264a26c-7c6d-418f-9685-f3767c9f5434",
            "body": "{\n  \"mock\": {\n    \"collection\": \"1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc\",\n    \"environment\": \"1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524\",\n    \"id\": \"0fca2246-c108-41f5-8454-cc032def329f\",\n    \"mockUrl\": \"https://0fca2246-c108-41f5-8454-cc032def329f.mock.pstmn.io\",\n    \"owner\": \"1679925\",\n    \"uid\": \"1679925-0fca2246-c108-41f5-8454-cc032def329f\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Successful Response",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "84ff89a4-9a2d-49cd-b457-fcf76df10107",
        "documentation": "Delete Mock",
        "method": "delete",
        "endpoint": "mocks/:mock_uid",
        "responses": [
          {
            "uuid": "606cd429-622e-4bdf-b082-de7185e539d3",
            "body": "{\n  \"mock\": {\n    \"id\": \"0fca2246-c108-41f5-8454-cc032def329f\",\n    \"uid\": \"1679925-0fca2246-c108-41f5-8454-cc032def329f\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Successful Response",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "aec0e89a-ee99-4d81-a88d-571ab033c5a5",
        "documentation": "Single Mock",
        "method": "get",
        "endpoint": "mocks/:mock_uid",
        "responses": [
          {
            "uuid": "6751cf2a-26f6-49b4-abaf-5a8a3f5e367e",
            "body": "{\n  \"mock\": {\n    \"collection\": \"1679925-39fee52f-b806-3ffa-1173-00a6f5b183dc\",\n    \"environment\": \"1679925-0b9e9f15-3208-a2b1-22e0-d58392f01524\",\n    \"id\": \"0fca2246-c108-41f5-8454-cc032def329f\",\n    \"mockUrl\": \"https://0fca2246-c108-41f5-8454-cc032def329f.mock.pstmn.io\",\n    \"owner\": \"1679925\",\n    \"uid\": \"1679925-0fca2246-c108-41f5-8454-cc032def329f\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Successful Response",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "0620ea5b-530e-466e-8e6b-221f6f2897c0",
        "documentation": "Update Mock",
        "method": "put",
        "endpoint": "mocks/:mock_uid",
        "responses": [
          {
            "uuid": "4f9182ee-4990-4ac4-9faa-9ac36dd8e961",
            "body": "{\n  \"mock\": {\n    \"collection\": \"11582779-fd6797e2-de6b-4699-975c-85290e4c2499\",\n    \"config\": {\n      \"headers\": [\n        \"\"\n      ],\n      \"matchBody\": {{faker 'random.boolean'}},\n      \"matchQueryParams\": true,\n      \"matchWildcards\": true\n    },\n    \"environment\": \"11582779-ac1b6608-deb7-4c05-9d48-ee775aabfc19\",\n    \"id\": \"06040138-dd6b-4cce-9a02-7e1c1ab59723\",\n    \"mockUrl\": \"https://06040138-dd6b-4cce-9a02-7e1c1ab59723.mock.pstmn.io\",\n    \"name\": \"My Mock Server\",\n    \"owner\": \"11582779\",\n    \"uid\": \"11582779-06040138-dd6b-4cce-9a02-7e1c1ab59723\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "success Response",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "4b2c113b-0417-4012-be2f-b5beb8f183a3",
        "documentation": "Publish Mock",
        "method": "post",
        "endpoint": "mocks/:mock_uid/publish",
        "responses": [
          {
            "uuid": "01f097d5-2158-4e7a-9f1a-f222c63becef",
            "body": "{\n  \"mock\": {\n    \"id\": \"06040138-dd6b-4cce-9a02-7e1c1ab59723\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Success Response",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "685b5f41-fc1a-4665-9230-d35c55676480",
        "documentation": "Unpublish Mock",
        "method": "delete",
        "endpoint": "mocks/:mock_uid/unpublish",
        "responses": [
          {
            "uuid": "7e3041fd-86a2-47a2-ae1a-b10619ce68b9",
            "body": "{\n  \"mock\": {\n    \"id\": \"06040138-dd6b-4cce-9a02-7e1c1ab59723\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Success Response",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "a12dd05c-0e02-48a0-b5f1-280b5336a950",
        "documentation": "All Monitors",
        "method": "get",
        "endpoint": "monitors",
        "responses": [
          {
            "uuid": "70286785-7860-4f28-915f-3584c13d7177",
            "body": "{\n  \"monitors\": [\n    {\n      \"id\": \"1e6b6c77-2031-42d0-9948-76d7251b2dd1\",\n      \"name\": \"Batman & Sherlock Holmes Monitor\",\n      \"owner\": \"5852\",\n      \"uid\": \"5852-1e6b6c77-2031-42d0-9948-76d7251b2dd1\"\n    }\n  ]\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Successful Response",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "95229bf5-e2c4-49d9-9d5f-647a570585f5",
        "documentation": "Create Monitor",
        "method": "post",
        "endpoint": "monitors",
        "responses": [
          {
            "uuid": "96ec78e6-4ad0-46c9-a7ec-00225609b0b7",
            "body": "{\n  \"monitor\": {\n    \"id\": \"1e6b6dfd-7ba4-4590-9ee1-5948102d7797\",\n    \"name\": \"Monitor Name\",\n    \"uid\": \"5852-1e6b6dfd-7ba4-4590-9ee1-5948102d7797\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Create Monitor in a Workspace",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          },
          {
            "uuid": "e0660316-9c4b-4737-a06a-e53a48842315",
            "body": "{\n  \"error\": {\n    \"details\": {\n      \"param\": \"monitor\"\n    },\n    \"message\": \"Parameter is missing in the request.\",\n    \"name\": \"paramMissingError\"\n  }\n}",
            "latency": 0,
            "statusCode": 400,
            "label": "Parameter Missing",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "56777f6a-5a4b-4165-97b3-b9831759f33a",
        "documentation": "Delete Monitor",
        "method": "delete",
        "endpoint": "monitors/:monitor_uid",
        "responses": [
          {
            "uuid": "89611a38-65f8-466e-9cff-89a3d870090e",
            "body": "{\n  \"monitor\": {\n    \"id\": \"1e6b8957-35f9-42a0-8d2f-f03d7085b3d2\",\n    \"uid\": \"5852-1e6b8957-35f9-42a0-8d2f-f03d7085b3d2\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Monitor Deleted",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          },
          {
            "uuid": "5424c455-0065-40b9-b086-1129ad71ffae",
            "body": "{\n  \"error\": {\n    \"message\": \"The specified monitor does not exist.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}",
            "latency": 0,
            "statusCode": 404,
            "label": "Monitor Not Found",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "35219da7-679c-43ad-96a9-88bab35b1417",
        "documentation": "Single Monitor",
        "method": "get",
        "endpoint": "monitors/:monitor_uid",
        "responses": [
          {
            "uuid": "0c8fac80-407e-4bbe-88d2-917caeb885ce",
            "body": "{\n  \"monitor\": {\n    \"collectionUid\": \"5852-8d05dd85-222c-1452-553b-e76a531b71ed\",\n    \"distribution\": [\n      \"\"\n    ],\n    \"environmentUid\": \"5851-8d05dd85-222c-1452-553b-e76a531b71ed\",\n    \"id\": \"1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\",\n    \"lastRun\": {\n      \"finishedAt\": \"2020-03-25T15:45:31.340Z\",\n      \"startedAt\": \"2020-03-25T15:45:29.218Z\",\n      \"stats\": {\n        \"assertions\": {\n          \"failed\": 1,\n          \"total\": 8\n        },\n        \"requests\": {\n          \"total\": 4\n        }\n      },\n      \"status\": \"failed\"\n    },\n    \"name\": \"Postman Echo Monitor\",\n    \"notifications\": {\n      \"onError\": [\n        {\n          \"email\": \"john.appleseed@example.com\"\n        }\n      ],\n      \"onFailure\": [\n        {\n          \"email\": \"john.appleseed@example.com\"\n        }\n      ]\n    },\n    \"options\": {\n      \"followRedirects\": true,\n      \"requestDelay\": {{faker 'random.number'}},\n      \"requestTimeout\": 3000,\n      \"strictSSL\": true\n    },\n    \"owner\": \"5852\",\n    \"schedule\": {\n      \"cron\": \"0 0 * * * *\",\n      \"nextRun\": \"2016-11-30T09:30:00.000Z\",\n      \"timezone\": \"Asia/Calcutta\"\n    },\n    \"uid\": \"5852-1e6b6cc1-c760-48e0-968f-4bfaeeae9af1\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Successful Response",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          },
          {
            "uuid": "b6424e99-c077-45fe-a0ac-5a45643d953e",
            "body": "{\n  \"error\": {\n    \"message\": \"The specified monitor does not exist.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}",
            "latency": 0,
            "statusCode": 404,
            "label": "Monitor Not Found",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "e58d7890-6ab5-452b-bd0b-4b8f9b414897",
        "documentation": "Update Monitor",
        "method": "put",
        "endpoint": "monitors/:monitor_uid",
        "responses": [
          {
            "uuid": "82a75506-26aa-492f-bdf4-b2819494884c",
            "body": "{\n  \"monitor\": {\n    \"id\": \"1e6b6e2a-c2ad-4090-b750-0df4e6624352\",\n    \"name\": \"Updated Monitor Name\",\n    \"uid\": \"5852-1e6b6e2a-c2ad-4090-b750-0df4e6624352\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Monitor Updated",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "8def77e3-1895-42c6-8b7e-d596994042a8",
        "documentation": "Run a Monitor",
        "method": "post",
        "endpoint": "monitors/:monitor_uid/run",
        "responses": [
          {
            "uuid": "1438e133-9a17-4b0f-ac6b-61c552ecfef3",
            "body": "{\n  \"run\": {\n    \"executions\": [\n      {\n        \"id\": 1,\n        \"item\": {\n          \"id\": \"b5e8d7dd-909c-4ba7-aef4-8609bc50b586\",\n          \"name\": \"Sample POST Request\"\n        },\n        \"request\": {\n          \"body\": {\n            \"contentLength\": 18,\n            \"mode\": \"raw\"\n          },\n          \"headers\": {\n            \"accept\": \"*/*\",\n            \"accept-encoding\": \"gzip, deflate\",\n            \"content-length\": 18,\n            \"content-type\": \"application/json\"\n          },\n          \"method\": \"POST\",\n          \"timestamp\": \"2016-12-04T14:30:26.025Z\",\n          \"url\": \"echo.getpostman.com/post\"\n        },\n        \"response\": {\n          \"body\": {\n            \"contentLength\": 298\n          },\n          \"code\": 200,\n          \"headers\": {\n            \"connection\": \"keep-alive\",\n            \"content-encoding\": \"gzip\",\n            \"content-type\": \"application/json\",\n            \"date\": \"Sun, 04 Dec 2016 14:30:26 GMT\",\n            \"transfer-encoding\": \"chunked\"\n          },\n          \"responseSize\": 298,\n          \"responseTime\": 26\n        }\n      }\n    ],\n    \"failures\": [\n      {\n        \"assertion\": {\n          \"Status code is 400\": {{faker 'random.boolean'}}\n        },\n        \"executionId\": 2,\n        \"message\": \"Expected 'Status code is 400' to be truthy\",\n        \"name\": \"AssertionError\"\n      }\n    ],\n    \"info\": {\n      \"collectionUid\": \"5852-1d3daef4-2037-4584-ab86-bafd8c8f8a55\",\n      \"finishedAt\": \"2016-12-04T14:30:26.000Z\",\n      \"jobId\": \"1e6ba2e3-1aaf-4c10-bd5f-905943284b2a\",\n      \"monitorId\": \"1e6b8970-fd13-4480-b011-b3b3e3cd271d\",\n      \"name\": \"Sample Collection monitor 1 #56\",\n      \"startedAt\": \"2016-12-04T14:30:25.000Z\",\n      \"status\": \"failed\"\n    },\n    \"stats\": {\n      \"assertions\": {\n        \"failed\": 1,\n        \"total\": 1\n      },\n      \"requests\": {\n        \"failed\": 1,\n        \"total\": 3\n      }\n    }\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Monitor Run with Errors",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "be05bffa-e08e-4e17-b7df-d1a4da71bcbc",
        "documentation": "Create Webhook",
        "method": "post",
        "endpoint": "webhooks",
        "responses": [
          {
            "uuid": "fc093e5b-519c-4d09-8d9b-3264913faf73",
            "body": "",
            "latency": 0,
            "statusCode": 200,
            "label": "",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "902b29b2-a875-4a4a-b790-bcbd2f9c1ad5",
        "documentation": "All workspaces",
        "method": "get",
        "endpoint": "workspaces",
        "responses": [
          {
            "uuid": "9bc4a994-f1ad-4819-beb8-b4ceffe38475",
            "body": "{\n  \"workspaces\": [\n    {\n      \"id\": \"4e6d34c2-cfdb-4b33-8868-12a875bebda3\",\n      \"name\": \"My Workspace\",\n      \"type\": \"personal\"\n    }\n  ]\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Valid Response",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "313e2404-1578-4ad7-b73a-a07c41a028cf",
        "documentation": "Create Workspace",
        "method": "post",
        "endpoint": "workspaces",
        "responses": [
          {
            "uuid": "37e46200-07b9-48e6-ada8-f808c6133e89",
            "body": "{\n  \"workspace\": {\n    \"id\": \"cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f\",\n    \"name\": \"New Workspace\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Successful Response",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          },
          {
            "uuid": "b9e600c1-bb2b-4ee3-b875-0925df6aaffc",
            "body": "{\n  \"error\": {\n    \"message\": \"Instance not found in the database.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}",
            "latency": 0,
            "statusCode": 400,
            "label": "Instance supplied not found",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "96bce037-2e2d-4f1b-9719-af541b548738",
        "documentation": "Delete Workspace",
        "method": "delete",
        "endpoint": "workspaces/:workspace_id",
        "responses": [
          {
            "uuid": "428f5887-706b-4e13-ba07-52d5406cdd97",
            "body": "{\n  \"workspace\": {\n    \"id\": \"{{workspace_id}}\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Successful Response",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "3c1cad8d-4282-4a6c-bb12-57d5e7daface",
        "documentation": "Single workspace",
        "method": "get",
        "endpoint": "workspaces/:workspace_id",
        "responses": [
          {
            "uuid": "55ffd943-d94a-4224-ae5d-7cc20bb3255a",
            "body": "{\n  \"workspace\": {\n    \"collections\": [\n      {\n        \"id\": \"7c31b469-bd43-4411-9283-6d397855ee0e\",\n        \"name\": \"Mock demo - collection\",\n        \"uid\": \"1234-7c31b469-bd43-4411-9283-6d397855ee0e\"\n      }\n    ],\n    \"description\": \"Demos.\",\n    \"environments\": [\n      {\n        \"id\": \"423fd955-a9c8-47cd-9ab0-09a6a575c4be\",\n        \"name\": \"Mock demo - CNX\",\n        \"uid\": \"1234-423fd955-a9c8-47cd-9ab0-09a6a575c4be\"\n      }\n    ],\n    \"id\": \"f8801e9e-03a4-4c7b-b31e-5db5cd771696\",\n    \"name\": \"Demo workspace\",\n    \"type\": \"personal\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Valid Response",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          },
          {
            "uuid": "32243cbc-e14f-4a35-86ce-deb2b4df3e2c",
            "body": "{\n  \"error\": {\n    \"message\": \"Instance not found in the database.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}",
            "latency": 0,
            "statusCode": 404,
            "label": "Workspace Not Found",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      },
      {
        "uuid": "3b665046-ae1b-4df1-88b5-f70a2a6fc92e",
        "documentation": "Update Workspace",
        "method": "put",
        "endpoint": "workspaces/:workspace_id",
        "responses": [
          {
            "uuid": "7a3d060d-1aa2-4d5a-885f-68d515f291f2",
            "body": "{\n  \"workspace\": {\n    \"id\": \"cfbcd9bf-cc8b-4d6f-b8ef-440a3e49e29f\",\n    \"name\": \"New Workspace\"\n  }\n}",
            "latency": 0,
            "statusCode": 200,
            "label": "Successful Response",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          },
          {
            "uuid": "aa9652dd-58a2-4982-ab9f-df40d9816a67",
            "body": "{\n  \"error\": {\n    \"message\": \"You do not have access to update this workspace.\",\n    \"name\": \"forbiddenError\"\n  }\n}",
            "latency": 0,
            "statusCode": 403,
            "label": "Not enough permissions",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          },
          {
            "uuid": "f92b2e75-3c3f-49bc-af19-73451f8d036a",
            "body": "{\n  \"error\": {\n    \"message\": \"The specified workspace does not exist.\",\n    \"name\": \"instanceNotFoundError\"\n  }\n}",
            "latency": 0,
            "statusCode": 404,
            "label": "Specified workspace/entities do not exist",
            "headers": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "filePath": "",
            "sendFileAsBody": false,
            "rules": [],
            "rulesOperator": "OR",
            "disableTemplating": false,
            "fallbackTo404": false
          }
        ],
        "enabled": true,
        "randomResponse": false,
        "sequentialResponse": false
      }
    ],
    "proxyMode": false,
    "proxyHost": "",
    "proxyRemovePrefix": false,
    "tlsOptions": {
      "enabled": false,
      "type": "CERT",
      "pfxPath": "",
      "certPath": "",
      "keyPath": "",
      "caPath": "",
      "passphrase": ""
    },
    "cors": true,
    "headers": [],
    "proxyReqHeaders": [
      {
        "key": "",
        "value": ""
      }
    ],
    "proxyResHeaders": [
      {
        "key": "",
        "value": ""
      }
    ]
  }
